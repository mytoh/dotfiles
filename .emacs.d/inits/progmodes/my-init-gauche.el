                                        ;http://practical-scheme.net/wiliki/wiliki.cgi?Gauche%3aEditingWithEmacs
                                        ; gauche
(setq process-coding-system-alist
      (cons '("gosh" utf-8 . utf-8) process-coding-system-alist))
(setq scheme-program-name "gosh -i")
(autoload 'scheme-mode "cmuscheme" "Major mode for Scheme." t)
(autoload 'run-scheme  "cmuscheme" "Run an inferior Scheme process." t)


                                        ; http://valvallow.blogspot.jp/2011/03/emacs-scheme-gauche.html
(defun my-scheme-other-window ()
  "run scheme on other window"
  (interactive)
  (split-window-horizontally 90)
  (let ((buf-name (buffer-name (current-buffer))))
    (switch-to-buffer-other-window
     (get-buffer-create "*scheme*"))
    (run-scheme scheme-program-name)
    (switch-to-buffer-other-window
     (get-buffer-create buf-name))))

(defun my-scheme-mode-hook ()
  (define-key my-original-map (kbd "C-s") 'my-scheme-other-window)
  (local-set-key (kbd "C-m") 'newline-and-indent)
  (add-hook 'before-save-hook 'my-before-save-hook nil t))
(add-hook 'scheme-mode-hook 'my-scheme-mode-hook)

(defun* my-inferior-scheme-mode-hook ()
  (local-set-key (kbd "C-p") 'comint-previous-input)
  (local-set-key (kbd "C-n") 'comint-next-line))
(add-hook 'inferior-scheme-mode-hook 'my-inferior-scheme-mode-hook)

(defmacro* my-scheme-make-face (face fore)
  `(progn
     (make-face ,face)
     (set-face-foreground ,face  ,fore)))

(my-scheme-make-face 'my-font-lock-scheme-syntax-face "#73ca79")
(my-scheme-make-face 'my-font-lock-scheme-function-face "#c3c279")

(my-scheme-make-face 'my-font-lock-scheme-string-face "#f24f47")
(my-scheme-make-face 'my-font-lock-scheme-character-face "#fee1a2")
(my-scheme-make-face 'my-font-lock-scheme-number-face "#b5ae5b")
(my-scheme-make-face 'my-font-lock-scheme-boolean-face "#ffbe5c")

(my-scheme-make-face 'my-font-lock-scheme-delimiter-face "#ababab")
(my-scheme-make-face 'my-font-lock-scheme-constant-face "#e9c3b9")

(my-scheme-make-face 'my-font-lock-scheme-comment-face "#ababab")
(my-scheme-make-face 'my-font-lock-scheme-multicomment-face "#ababab")
(my-scheme-make-face 'my-font-lock-scheme-error-face "#ababab")

(my-scheme-make-face 'my-font-lock-scheme-module-macro-face "#9399ab")
(my-scheme-make-face 'my-font-lock-scheme-module-syntax-face "#93c9ab")
(my-scheme-make-face 'my-font-lock-scheme-module-function-face "#3b5993")
(my-scheme-make-face 'my-font-lock-scheme-module-procedure-face "#3b9993")
(my-scheme-make-face 'my-font-lock-scheme-module-method-face "#c3b9a9")
(my-scheme-make-face 'my-font-lock-scheme-module-charset-face "#9bc993")
(my-scheme-make-face 'my-font-lock-scheme-module-class-face "#ebc893")
(my-scheme-make-face 'my-font-lock-scheme-module-parameter-face "#e999b3")

(my-scheme-make-face 'my-font-lock-scheme-regexp-face "#7ea978")
(my-scheme-make-face 'my-font-lock-scheme-srfi62-comment-face "#ababab")
(my-scheme-make-face 'my-font-lock-scheme-sharpbang-face "#ababab")
(my-scheme-make-face 'my-font-lock-scheme-include-face "#ababab")
(my-scheme-make-face 'my-font-lock-scheme-interpolation-face "#ababab")



;; function from http://emacswiki.org/emacs/AddKeywords
(defun my-scheme-add-keywords (face-name keyword-rules)
  (let* ((keyword-list (mapcar #'(lambda (x)
                                   (symbol-name (cdr x)))
                               keyword-rules))
         (keyword-regexp (concat "(\\("
                                 (regexp-opt keyword-list)
                                 "\\)[ \n]")))
    (font-lock-add-keywords 'scheme-mode
                            `((,keyword-regexp 1 ',face-name))))
  (mapc #'(lambda (x)
            (put (cdr x)
                 'scheme-indent-function
                 (car x)))
        keyword-rules))

(my-scheme-add-keywords
 'my-font-lock-scheme-syntax-face
 '(
   (0 . use)
   (0 . require)
   (0 . require-extension)
   (1 . export)
   (1 . define-constant)
   (1 . and-let*)
   (0 . begin0)
   (1 . call-with-client-socket)
   (1 . call-with-input-conversion)
   (1 . call-with-input-file)
   (1 . call-with-input-process )
   (1 . call-with-input-string )
   (1 . call-with-iterator)
   (1 . call-with-output-conversion)
   (1 . call-with-output-file)
   (0 . call-with-output-string)
   (1 . call-with-temporary-file)
   (1 . call-with-values )
   (1 . dolist)
   (1 . dotimes )
   (2 . if-match)
   (1 . let*-values )
   (2 . let-args )
   (2 . let-keywords* )
   (2 . let-match)
   (2 . let-optionals* )
   (1 . let-syntax )
   (1 . let-values)
   (1 . let/cc )
   (2 . let1)
   (1 . letrec-syntax )
   (1 . make )
   (2 . multiple-value-bind )
   (1 . parameterize )
   (1 . parse-options )
   (2 . receive )
   (1 . rxmatch-case )
   (0 . rxmatch-cond )
   (2 . rxmatch-if  )
   (2 . rxmatch-let )
   (1 . syntax-rules )
   (1 . unless )
   (1 . until )
   (1 . when )
   (1 . while )
   (1 . with-builder)
   (0 . with-error-handler)
   (1 . with-error-to-port )
   (1 . with-input-conversion )
   (1 . with-input-from-port )
   (1 . with-input-from-process)
   (1 . with-input-from-string )
   (1 . with-iterator )
   (1 . with-module)
   (1 . with-output-conversion)
   (1 . with-output-to-port )
   (1 . with-output-to-process )
   (1 . with-output-to-string )
   (1 . with-port-locking )
   (1 . with-string-io )
   (1 . with-time-counter)
   (1 . with-signal-handlers )
   (1 . select-module)
   (1 . exit)
   ))

(my-scheme-add-keywords
 'my-font-lock-scheme-function-face
 '(
   (1 . open-input-string )
   (1 . add-load-path)
   (1 . string=?)
   (1 . string-append)
   (1 . string->symbol)
   (1 . null-list?)
   (1 . eq?)
   (1 . string?)
   (1 . length)
   (1 . null?)
   (1 . list)
   (1 . cons)
   (1 . fold )
   (1 . car)
   (1 . cdr)
   (1 . cadr)
   (1 . caddr)
   (1 . not)
   (1 . zero?)
   (1 . erroro)
   (1 . newline)
   (1 . display)
   (1 . print)
   (1 . load)
   (1 . >=)
   (1 . x->number)
   (1 . read-line)
   (1 . rx-match->string)
   (1 . port-for-each)
   (1 . cut)
   (1 . read-line)
   (1 . values-ref)
   (1 . ces-convert)
   (1 . file-exists?)
   (1 . file-is-directory? )
   (1 . sys-symlink)
   (1 . sys-dirname)

   (1 . sys-setenv)
   (1 . sys-unsetenv)
   (1 . sys-getenv)

   (1 . rxmatch->string)
   (1 . string->regexp)
   (1 . string-scan)
   (1 . string-split)
   ))

;;  module
(my-scheme-add-keywords
 'my-font-lock-scheme-module-function-face

 '(
                                        ;(1 . *argc*)
   (1 . <gauche-package-description>)
   (1 . <instance-table-meta>)
   (1 . <instance-table-mixin>)
   (1 . G184)
   (1 . G185)
   (1 . G2355)
   (1 . G2356)
   (1 . G3007)
   (1 . G3008)
   (1 . G3009)
   (1 . G3010)
   (1 . G3011)
   (1 . G3012)
   (1 . G3013)
   (1 . G3301)
   (1 . G5)
   (1 . G6)
   (1 . G921)
   (1 . G922)
   (1 . G923)
   (1 . access-log)
   (1 . access-log-drain)
   (1 . add-http-handler!)
   (1 . add-signal-handler!)
   (1 . address-of)
   (1 . address?)
   (1 . autoload?)
   (1 . catch)
   (1 . cgi-handler)
   (1 . cgi-script)
   (1 . commands)
   (1 . continuation?)
   (1 . copy-tree)
   (1 . dbd-null-test-result-set!)
   (1 . define-http-handler)
   (1 . dry-run)
   (1 . dump)
   (1 . environment->list)
   (1 . environment?)
   (1 . error-log)
   (1 . error-log-drain)
   (1 . eval-hook)
   (1 . expand-heap)
   (1 . export-all-symbols)
   (1 . export-symbol)
   (1 . file-handler)
   (1 . find-gauche-package-description)
   (1 . gauche-package-build)
   (1 . gauche-package-clean)
   (1 . gauche-package-compile)
   (1 . gauche-package-compile-and-link)
   (1 . gauche-package-description-paths)
   (1 . gauche-package-ensure)
   (1 . gauche-package-link)
   (1 . gc-stats)
   (1 . get-internal-info)
   (1 . get-password)
   (1 . global-environment)
   (1 . http-server-software)
   (1 . input-file-port?)
   (1 . input-string-port?)
   (1 . input-virtual-port?)
   (1 . kaava-kansio)
   (1 . load-build-file)
   (1 . machine-type)
   (1 . macro)
   (1 . macro-body)
   (1 . macro-expand)
   (1 . macro-expand-1)
   (1 . macro?)
   (1 . module-environment)
   (1 . module-symbols)
   (1 . open-input-virtual)
   (1 . open-output-virtual)
   (1 . output-file-port?)
   (1 . output-string-port?)
   (1 . output-virtual-port?)
   (1 . parent-environment)
   (1 . path->gauche-package-description)
   (1 . posix-mkdir)
   (1 . posix-perror)
   (1 . procedure-body)
   (1 . procedure-environment)
   (1 . request-cookie-ref)
   (1 . request-cookies)
   (1 . request-header-ref)
   (1 . request-headers)
   (1 . request-iport)
   (1 . request-method)
   (1 . request-oport)
   (1 . request-params)
   (1 . request-path)
   (1 . request-path-rxmatch)
   (1 . request-response-error)
   (1 . request-server-host)
   (1 . request-server-port)
   (1 . request-socket)
   (1 . request?)
   (1 . respond/ng)
   (1 . respond/ok)
   (1 . respond/redirect)
   (1 . response-cookie-add!)
   (1 . response-cookie-delete!)
   (1 . response-header-delete!)
   (1 . response-header-push!)
   (1 . response-header-replace!)
   (1 . run)
   (1 . send-signal)
   (1 . start-http-server)
   (1 . the-environment)
   (1 . try-load)
   (1 . uncode)
   (1 . vector-resize)
   (1 . verbose-run)
   (1 . when-port-readable)
   (1 . when-port-writable)
   (1 . write-gauche-package-description)
   ))


;;  syntax
(my-scheme-add-keywords
 'my-font-lock-scheme-syntax-face


 '(
   (1 . %macroexpand)
   (1 . %macroexpand-1)
   (1 . and-let*)
   (1 . case-lambda)
   (1 . current-module)
   (1 . define-class)
   (1 . define-constant)
   (1 . define-generic)
   (1 . define-in-module)
   (1 . define-inline)
   (1 . define-macro)
   (1 . define-method)
   (1 . define-module)
   (1 . eval-when)
   (1 . export)
   (1 . export-all)
   (1 . extend)
   (1 . import)
   (1 . include)
   (1 . lazy)
   (1 . receive)
   (1 . select-module)
   (1 . unless)
   (1 . when)
   (1 . with-module)
   ))


;;  macro
(my-scheme-add-keywords
 'my-font-lock-scheme-module-macro-face

 '(
   (1 . $)
   (1 . $*)
   (1 . $<<)
   (1 . $do)
   (1 . $do*)
   (1 . $lazy)
   (1 . $many-chars)
   (1 . $or)
   (1 . $satisfy)
   (1 . %do-ec)
   (1 . %ec-guarded-do-ec)
   (1 . %first-ec)
   (1 . %guard-rec)
   (1 . %replace-keywords)
                                        ;(1 . --)
   (1 . ^)
   (1 . ^*)
   (1 . ^-generator)
   (1 . ^.)
   (1 . ^_)
   (1 . ^a)
   (1 . ^b)
   (1 . ^c)
   (1 . ^d)
   (1 . ^e)
   (1 . ^f)
   (1 . ^g)
   (1 . ^h)
   (1 . ^i)
   (1 . ^j)
   (1 . ^k)
   (1 . ^l)
   (1 . ^m)
   (1 . ^n)
   (1 . ^o)
   (1 . ^p)
   (1 . ^q)
   (1 . ^r)
   (1 . ^s)
   (1 . ^t)
   (1 . ^u)
   (1 . ^v)
   (1 . ^w)
   (1 . ^x)
   (1 . ^y)
   (1 . ^z)
   (1 . add-load-path)
   (1 . any?-ec)
   (1 . append-ec)
   (1 . assert)
   (1 . autoload)
   (1 . begin0)
   (1 . cgen-with-cpp-condition)
   (1 . check-arg)
   (1 . colour-command)
   (1 . cond-expand)
   (1 . cond-list)
   (1 . condition)
   (1 . cut)
   (1 . cute)
   (1 . debug-print)
   (1 . dec!)
   (1 . declare)
   (1 . define-^x)
   (1 . define-cgen-literal)
   (1 . define-cise-expr)
   (1 . define-cise-macro)
   (1 . define-cise-stmt)
   (1 . define-cise-toplevel)
   (1 . define-compiler-macro)
   (1 . define-condition-type)
   (1 . define-fstruct-type)
   (1 . define-record-type)
   (1 . define-values)
   (1 . defmacro)
   (1 . do-ec)
   (1 . do-ec:do)
   (1 . dolist)
   (1 . dotimes)
   (1 . ec-guarded-do-ec)
   (1 . ec-simplify)
   (1 . ecase)
   (1 . ecase-helper)
   (1 . every?-ec)
   (1 . export-if-defined)
   (1 . first-ec)
   (1 . fluid-let)
   (1 . fold-ec)
   (1 . fold3-ec)
   (1 . forever)
   (1 . get-keyword*)
   (1 . get-optional)
   (1 . guard)
   (1 . http-cond-receiver)
   (1 . if-let1)
   (1 . inc!)
   (1 . inline-stub)
   (1 . last-ec)
   (1 . let*-values)
   (1 . let-args)
   (1 . let-keywords)
   (1 . let-keywords*)
   (1 . let-optionals*)
   (1 . let-string-start+end)
   (1 . let-values)
   (1 . let/cc)
   (1 . let1)
   (1 . list-ec)
   (1 . make-option-parser)
   (1 . match)
   (1 . match-define)
   (1 . match-lambda)
   (1 . match-lambda*)
   (1 . match-let)
   (1 . match-let*)
   (1 . match-let1)
   (1 . match-letrec)
   (1 . max-ec)
   (1 . min-ec)
   (1 . parameterize)
   (1 . parse-options)
   (1 . pop!)
   (1 . product-ec)
   (1 . program)
   (1 . push!)
   (1 . rec)
   (1 . require)
   (1 . require-extension)
   (1 . reset)
   (1 . rlet1)
   (1 . run-command)
   (1 . rxmatch-case)
   (1 . rxmatch-cond)
   (1 . rxmatch-if)
   (1 . rxmatch-let)
   (1 . set!-values)
   (1 . shift)
   (1 . srfi-42-)
   (1 . srfi-42-char-range)
   (1 . srfi-42-dispatched)
   (1 . srfi-42-do)
   (1 . srfi-42-generator-proc)
   (1 . srfi-42-integers)
   (1 . srfi-42-let)
   (1 . srfi-42-list)
   (1 . srfi-42-parallel)
   (1 . srfi-42-parallel-1)
   (1 . srfi-42-port)
   (1 . srfi-42-range)
   (1 . srfi-42-real-range)
   (1 . srfi-42-string)
   (1 . srfi-42-until)
   (1 . srfi-42-until-1)
   (1 . srfi-42-vector)
   (1 . srfi-42-while)
   (1 . srfi-42-while-1)
   (1 . srfi-42-while-2)
   (1 . ssax:make-elem-parser)
   (1 . ssax:make-parser)
   (1 . ssax:make-pi-parser)
   (1 . stream-cons)
   (1 . stream-delay)
   (1 . string-append-ec)
   (1 . string-ec)
   (1 . sum-ec)
   (1 . sxml:find-name-separator)
   (1 . syntax-error)
   (1 . syntax-errorf)
   (1 . test*)
   (1 . time)
   (1 . until)
   (1 . unwind-protect)
   (1 . update!)
   (1 . use)
   (1 . use-version)
   (1 . values-ref)
   (1 . vector-ec)
   (1 . vector-of-length-ec)
   (1 . while)
   (1 . with-builder)
   (1 . with-iterator)
   (1 . with-signal-handlers)
   (1 . with-time-counter)
   (1 . with-tmodule)
   (1 . xmac)
   (1 . xmac1)
   ))


;;  procedure
(my-scheme-add-keywords
 'my-font-lock-scheme-module-procedure-face

 '(
   (1 . $->rope)
   (1 . $alternate)
   (1 . $between)
   (1 . $c)
   (1 . $chain-left)
   (1 . $chain-right)
   (1 . $char)
   (1 . $count)
   (1 . $end-by)
   (1 . $expect)
   (1 . $fail)
   (1 . $fold-parsers)
   (1 . $fold-parsers-right)
   (1 . $many)
   (1 . $many-till)
   (1 . $many1)
   (1 . $none-of)
   (1 . $not)
   (1 . $one-of)
   (1 . $optional)
   (1 . $repeat)
   (1 . $return)
   (1 . $s)
   (1 . $sep-by)
   (1 . $sep-end-by)
   (1 . $seq)
   (1 . $skip-many)
   (1 . $string)
   (1 . $string-ci)
   (1 . $try)
   (1 . $y)
   (1 . %add-load-path)
   (1 . %alist-delete)
   (1 . %alist-delete!)
   (1 . %autoload)
   (1 . %bignum-dump)
   (1 . %char-set-add!)
   (1 . %char-set-add-chars!)
   (1 . %char-set-add-range!)
   (1 . %char-set-complement!)
   (1 . %char-set-dump)
   (1 . %char-set-equal?)
   (1 . %char-set-predefined)
   (1 . %char-set-ranges)
   (1 . %char-set<=?)
   (1 . %check-class-binding)
   (1 . %default-signal-handler)
   (1 . %delete)
   (1 . %delete!)
   (1 . %delete-duplicates)
   (1 . %delete-duplicates!)
   (1 . %div&mod)
   (1 . %ensure-generic-function)
   (1 . %exact-integer-sqrt)
   (1 . %exit)
   (1 . %export-all)
   (1 . %extend-module)
   (1 . %format)
   (1 . %gauche-runtime-directory)
   (1 . %get-reader-ctor)
   (1 . %hash-string)
   (1 . %hash-table-iter)
   (1 . %let-keywords-rec)
   (1 . %make-sigset)
   (1 . %make-tree-map)
   (1 . %maybe-substring)
   (1 . %open-input-file)
   (1 . %open-input-file/conv)
   (1 . %open-output-file)
   (1 . %open-output-file/conv)
   (1 . %regexp-dump)
   (1 . %regexp-pattern)
   (1 . %regmatch-dump)
   (1 . %require)
   (1 . %slib-load)
   (1 . %sort)
   (1 . %sort!)
   (1 . %sparse-table-check)
   (1 . %sparse-table-dump)
   (1 . %sparse-vector-dump)
   (1 . %string-pointer-dump)
   (1 . %string-replace-body!)
   (1 . %string-split-by-char)
   (1 . %sys-escape-windows-command-line)
   (1 . %tree-map-bound)
   (1 . %tree-map-check-consistency)
   (1 . %tree-map-dump)
   (1 . %tree-map-iter)
   (1 . %uvector-ref)
   (1 . %vm-make-parameter-slot)
   (1 . %vm-parameter-ref)
   (1 . %vm-parameter-set!)
   (1 . %vm-show-stack-trace)
   (1 . %with-signal-handlers)
;   (1 . *.)
;   (1 . +.)
;   (1 . -.)
;   (1 . -1+)
;   (1 . ->char-set)
;   (1 . ->stream-char)
;   (1 . .$)
;   (1 . /.)
;   (1 . 1+)
;   (1 . 1-)
   (1 . G1144)
   (1 . G1145)
   (1 . G1150)
   (1 . G1153)
   (1 . G1157)
   (1 . G1158)
   (1 . G1212)
   (1 . G1213)
   (1 . G1214)
   (1 . G1215)
   (1 . G1217)
   (1 . G1219)
   (1 . G1220)
   (1 . G1221)
   (1 . G1222)
   (1 . G1223)
   (1 . G1224)
   (1 . G1596)
   (1 . G1597)
   (1 . G1598)
   (1 . G1599)
   (1 . G1600)
   (1 . G1601)
   (1 . G1602)
   (1 . G1603)
   (1 . G1604)
   (1 . G1605)
   (1 . G1606)
   (1 . G1624)
   (1 . G1625)
   (1 . G1626)
   (1 . G1627)
   (1 . G1628)
   (1 . G1629)
   (1 . G1630)
   (1 . G1631)
   (1 . G1632)
   (1 . G1633)
   (1 . G1634)
   (1 . G1652)
   (1 . G1653)
   (1 . G1654)
   (1 . G1655)
   (1 . G1656)
   (1 . G1657)
   (1 . G1658)
   (1 . G1659)
   (1 . G1660)
   (1 . G1661)
   (1 . G1662)
   (1 . G1680)
   (1 . G1681)
   (1 . G1682)
   (1 . G1683)
   (1 . G1684)
   (1 . G1685)
   (1 . G1686)
   (1 . G1687)
   (1 . G1688)
   (1 . G1689)
   (1 . G1690)
   (1 . G1708)
   (1 . G1709)
   (1 . G1710)
   (1 . G1711)
   (1 . G1712)
   (1 . G1713)
   (1 . G1714)
   (1 . G1715)
   (1 . G1716)
   (1 . G1717)
   (1 . G1718)
   (1 . G1736)
   (1 . G1737)
   (1 . G1738)
   (1 . G1739)
   (1 . G1740)
   (1 . G1741)
   (1 . G1742)
   (1 . G1743)
   (1 . G1744)
   (1 . G1745)
   (1 . G1746)
   (1 . G1764)
   (1 . G1765)
   (1 . G1766)
   (1 . G1767)
   (1 . G1768)
   (1 . G1769)
   (1 . G1770)
   (1 . G1771)
   (1 . G1772)
   (1 . G1773)
   (1 . G1774)
   (1 . G1792)
   (1 . G1793)
   (1 . G1794)
   (1 . G1795)
   (1 . G1796)
   (1 . G1797)
   (1 . G1798)
   (1 . G1799)
   (1 . G1800)
   (1 . G1801)
   (1 . G1802)
   (1 . G1820)
   (1 . G1821)
   (1 . G1822)
   (1 . G1823)
   (1 . G1824)
   (1 . G1825)
   (1 . G1826)
   (1 . G1827)
   (1 . G1828)
   (1 . G1829)
   (1 . G1830)
   (1 . G1848)
   (1 . G1849)
   (1 . G1850)
   (1 . G1851)
   (1 . G1852)
   (1 . G1853)
   (1 . G1854)
   (1 . G1855)
   (1 . G1856)
   (1 . G1857)
   (1 . G1858)
   (1 . G1876)
   (1 . G1877)
   (1 . G1878)
   (1 . G1879)
   (1 . G1880)
   (1 . G1881)
   (1 . G1882)
   (1 . G1883)
   (1 . G1884)
   (1 . G1885)
   (1 . G1886)
   (1 . G1888)
   (1 . G1890)
   (1 . G1892)
   (1 . G1894)
   (1 . G1896)
   (1 . G1898)
   (1 . G1900)
   (1 . G1902)
   (1 . SRV:send-reply)
   (1 . SSAX:XML->SXML)
   (1 . SXML->HTML)
   (1 . abandoned-mutex-exception?)
   (1 . absolute-path?)
   (1 . acons)
   (1 . acosh)
   (1 . add-duration)
   (1 . add-duration!)
   (1 . add-job!)
   (1 . alist->hash-table)
   (1 . alist->rbtree)
   (1 . alist->tree-map)
   (1 . alist-cons)
   (1 . alist-copy)
   (1 . alist-delete)
   (1 . alist-delete!)
   (1 . all-modules)
   (1 . all-tmodules)
   (1 . alphanum)
   (1 . any)
   (1 . any$)
   (1 . any-bits-set?)
   (1 . any-in-queue)
   (1 . any-pred)
   (1 . anychar)
   (1 . append!)
   (1 . append-map)
   (1 . append-map!)
   (1 . append-reverse)
   (1 . append-reverse!)
   (1 . apply$)
   (1 . args-fold)
   (1 . arithmetic-shift)
   (1 . arity)
   (1 . arity-at-least-value)
   (1 . arity-at-least?)
   (1 . array)
   (1 . array->list)
   (1 . array->vector)
   (1 . array-add-elements)
   (1 . array-any)
   (1 . array-concatenate)
   (1 . array-div-elements)
   (1 . array-div-left)
   (1 . array-div-right)
   (1 . array-end)
   (1 . array-equal?)
   (1 . array-every)
   (1 . array-expt)
   (1 . array-flip)
   (1 . array-flip!)
   (1 . array-for-each)
   (1 . array-for-each-index)
   (1 . array-for-each-index-by-dimension)
   (1 . array-inverse)
   (1 . array-length)
   (1 . array-mul)
   (1 . array-mul-elements)
   (1 . array-rank)
   (1 . array-rotate-90)
   (1 . array-shape)
   (1 . array-size)
   (1 . array-start)
   (1 . array-sub-elements)
   (1 . array-transpose)
   (1 . array-valid-index?)
   (1 . array?)
   (1 . as-nodeset)
   (1 . ascii->char)
   (1 . ash)
   (1 . asinh)
   (1 . assert-curr-char)
   (1 . assoc$)
   (1 . assoc-ref)
   (1 . assoc-set!)
   (1 . assq-ref)
   (1 . assq-set!)
   (1 . assq-values)
   (1 . assv-ref)
   (1 . assv-set!)
   (1 . atanh)
   (1 . atom)
   (1 . atom-ref)
   (1 . atom?)
   (1 . atomic)
   (1 . atomic-update!)
   (1 . attlist->alist)
   (1 . attlist-add)
   (1 . attlist-fold)
   (1 . attlist-null?)
   (1 . attlist-remove-top)
   (1 . base64-decode)
   (1 . base64-decode-string)
   (1 . base64-encode)
   (1 . base64-encode-string)
   (1 . base:eval)
   (1 . bcrypt-gensalt)
   (1 . bcrypt-hashpw)
   (1 . bignum?)
   (1 . bimap-left)
   (1 . bimap-left-delete!)
   (1 . bimap-left-exists?)
   (1 . bimap-left-get)
   (1 . bimap-put!)
   (1 . bimap-right)
   (1 . bimap-right-delete!)
   (1 . bimap-right-exists?)
   (1 . bimap-right-get)
   (1 . bindtextdomain)
   (1 . bit-count)
   (1 . bit-field)
   (1 . bit-set?)
   (1 . bits->generator)
   (1 . bitwise-and)
   (1 . bitwise-if)
   (1 . bitwise-ior)
   (1 . bitwise-merge)
   (1 . bitwise-not)
   (1 . bitwise-xor)
   (1 . boolean)
   (1 . booleans->integer)
   (1 . break)
   (1 . break!)
   (1 . browse-url)
   (1 . build-path)
   (1 . build-transliterator)
   (1 . byte-ready?)
   (1 . byte-ref)
   (1 . byte-set!)
   (1 . byte-substring)
   (1 . bytes)
   (1 . bytes->list)
   (1 . bytes-length)
   (1 . call-with-cgi-script)
   (1 . call-with-client-socket)
   (1 . call-with-ftp-connection)
   (1 . call-with-input-conversion)
   (1 . call-with-input-process)
   (1 . call-with-input-string)
   (1 . call-with-iterators)
   (1 . call-with-open-ports)
   (1 . call-with-output-conversion)
   (1 . call-with-output-process)
   (1 . call-with-output-string)
   (1 . call-with-process-io)
   (1 . call-with-string-io)
   (1 . call/pc)
   (1 . canonical-path)
   (1 . car+cdr)
   (1 . car-sxpath)
   (1 . cartesian-product)
   (1 . cartesian-product-for-each)
   (1 . cartesian-product-right)
   (1 . cartesian-product-right-for-each)
   (1 . catalog/require-version-match?)
   (1 . catalog:get)
   (1 . catalog:read)
   (1 . catalog:resolve)
   (1 . catalog:try-read)
   (1 . cd)
   (1 . ceiling->exact)
   (1 . cerr)
   (1 . ces-conversion-supported?)
   (1 . ces-convert)
   (1 . ces-equivalent?)
   (1 . ces-guess-from-string)
   (1 . ces-upper-compatible?)
   (1 . cgen-add!)
   (1 . cgen-allocate-static-datum)
   (1 . cgen-body)
   (1 . cgen-box-expr)
   (1 . cgen-cpp-conditions)
   (1 . cgen-decl)
   (1 . cgen-define)
   (1 . cgen-extern)
   (1 . cgen-genstub)
   (1 . cgen-include)
   (1 . cgen-init)
   (1 . cgen-literal)
   (1 . cgen-precompile)
   (1 . cgen-precompile-multi)
   (1 . cgen-pred-expr)
   (1 . cgen-return-stmt)
   (1 . cgen-safe-comment)
   (1 . cgen-safe-name)
   (1 . cgen-safe-name-friendly)
   (1 . cgen-stub-parse-form)
   (1 . cgen-stub-parser)
   (1 . cgen-type-from-name)
   (1 . cgen-unbox-expr)
   (1 . cgi-add-temporary-file)
   (1 . cgi-get-metavariable)
   (1 . cgi-get-parameter)
   (1 . cgi-header)
   (1 . cgi-main)
   (1 . cgi-parse-parameters)
   (1 . cgi-test-environment-ref)
   (1 . change-object-class)
   (1 . char->ucs)
   (1 . char-foldcase)
   (1 . char-general-category)
   (1 . char-set)
   (1 . char-set->list)
   (1 . char-set->string)
   (1 . char-set-adjoin)
   (1 . char-set-adjoin!)
   (1 . char-set-any)
   (1 . char-set-complement)
   (1 . char-set-complement!)
   (1 . char-set-contains?)
   (1 . char-set-copy)
   (1 . char-set-count)
   (1 . char-set-cursor)
   (1 . char-set-cursor-next)
   (1 . char-set-delete)
   (1 . char-set-delete!)
   (1 . char-set-diff+intersection)
   (1 . char-set-diff+intersection!)
   (1 . char-set-difference)
   (1 . char-set-difference!)
   (1 . char-set-every)
   (1 . char-set-filter)
   (1 . char-set-filter!)
   (1 . char-set-fold)
   (1 . char-set-for-each)
   (1 . char-set-hash)
   (1 . char-set-intersection)
   (1 . char-set-intersection!)
   (1 . char-set-map)
   (1 . char-set-ref)
   (1 . char-set-size)
   (1 . char-set-unfold)
   (1 . char-set-unfold!)
   (1 . char-set-union)
   (1 . char-set-union!)
   (1 . char-set-xor)
   (1 . char-set-xor!)
   (1 . char-set<=)
   (1 . char-set=)
   (1 . char-set?)
   (1 . char-title-case?)
   (1 . char-titlecase)
   (1 . chdir)
   (1 . check-directory-tree)
   (1 . check-substring-spec)
   (1 . circular-generator)
   (1 . circular-list)
   (1 . circular-list?)
   (1 . cise-context-copy)
   (1 . cise-lookup-macro)
   (1 . cise-register-macro!)
   (1 . cise-render)
   (1 . cise-render-rec)
   (1 . cise-render-to-string)
   (1 . cise-translate)
   (1 . clamp)
   (1 . class-direct-methods)
   (1 . class-direct-slots)
   (1 . class-direct-subclasses)
   (1 . class-direct-supers)
   (1 . class-name)
   (1 . class-of)
   (1 . class-precedence-list)
   (1 . class-slot-accessor)
   (1 . class-slot-bound?)
   (1 . class-slot-definition)
   (1 . class-slot-ref)
   (1 . class-slot-set!)
   (1 . class-slots)
   (1 . close-port)
   (1 . closure-code)
   (1 . closure?)
   (1 . codepoints->grapheme-clusters)
   (1 . codepoints->words)
   (1 . codepoints-downcase)
   (1 . codepoints-foldcase)
   (1 . codepoints-titlecase)
   (1 . codepoints-upcase)
   (1 . colour-string)
   (1 . combinations)
   (1 . combinations*)
   (1 . combinations*-for-each)
   (1 . combinations-for-each)
   (1 . compare)
   (1 . complement)
   (1 . complete-sexp?)
   (1 . compose)
   (1 . concatenate)
   (1 . concatenate!)
   (1 . condition-has-type?)
   (1 . condition-ref)
   (1 . condition-type?)
   (1 . condition-variable-broadcast!)
   (1 . condition-variable-name)
   (1 . condition-variable-signal!)
   (1 . condition-variable-specific)
   (1 . condition-variable-specific-set!)
   (1 . condition-variable?)
   (1 . condition?)
   (1 . cons*)
   (1 . console-device)
   (1 . construct-cookie-string)
   (1 . construct-json)
   (1 . construct-json-string)
   (1 . copy-bit)
   (1 . copy-bit-field)
   (1 . copy-directory*)
   (1 . copy-file)
   (1 . copy-port)
   (1 . copy-time)
   (1 . cosh)
   (1 . count)
   (1 . count$)
   (1 . cout)
   (1 . create-directory*)
   (1 . create-directory-tree)
   (1 . current-class-of)
   (1 . current-date)
   (1 . current-directory)
   (1 . current-error-port)
   (1 . current-exception-handler)
   (1 . current-julian-day)
   (1 . current-load-history)
   (1 . current-load-next)
   (1 . current-load-path)
   (1 . current-load-port)
   (1 . current-microseconds)
   (1 . current-modified-julian-day)
   (1 . current-thread)
   (1 . current-time)
   (1 . current-tmodule)
   (1 . current-tmodule-cname)
   (1 . cv-file)
   (1 . cv-string)
   (1 . daemonize)
   (1 . date->julian-day)
   (1 . date->modified-julian-day)
   (1 . date->rfc822-date)
   (1 . date->string)
   (1 . date->time-monotonic)
   (1 . date->time-tai)
   (1 . date->time-utc)
   (1 . date-week-day)
   (1 . date-week-number)
   (1 . date-year-day)
   (1 . date?)
   (1 . dbi-connect)
   (1 . dbi-list-drivers)
   (1 . dbi-make-driver)
   (1 . dbi-parse-dsn)
   (1 . dbi-prepare-sql)
   (1 . dbm-type->class)
   (1 . dcgettext)
   (1 . debug-source-info)
   (1 . declare-bundle!)
   (1 . decode-float)
   (1 . decompose-path)
   (1 . default-endian)
   (1 . define-page-handler)
   (1 . define-reader-ctor)
   (1 . define-reader-directive)
   (1 . defmacro:load)
   (1 . delete)  ;; test pass
   (1 . delete!)
   (1 . delete$)
   (1 . delete-directory*)
   (1 . delete-duplicates)
   (1 . delete-duplicates!)
   (1 . delete-file)
   (1 . delete-files)
   (1 . delete-keyword)
   (1 . delete-keyword!)
   (1 . delete-keywords)
   (1 . delete-keywords!)
   (1 . dequeue!)
   (1 . dequeue-all!)
   (1 . dequeue/wait!)
   (1 . describe-fstruct-type)
   (1 . determinant)
   (1 . determinant!)
   (1 . dgettext)
   (1 . diff)
   (1 . diff-report)
   (1 . digest-hexify)
   (1 . digit)
   (1 . digit->integer)
   (1 . directory-fold)
   (1 . directory-list)
   (1 . directory-list2)
   (1 . disasm)
   (1 . dispatch-union)
   (1 . dotted-list?)
   (1 . drop)
   (1 . drop*)
   (1 . drop-right)
   (1 . drop-right!)
   (1 . drop-right*)
   (1 . drop-while)
   (1 . dynamic-load)
   (1 . eager)
   (1 . ec-:vector-filter)
   (1 . eighth)
   (1 . end-of-char-set?)
   (1 . enqueue!)
   (1 . enqueue-unique!)
   (1 . enqueue/wait!)
   (1 . eof)
   (1 . eof-object)
   (1 . eq-hash)
   (1 . eqv-hash)
   (1 . error)
   (1 . errorf)
   (1 . every)
   (1 . every$)
   (1 . every-in-queue)
   (1 . every-pred)
   (1 . exit)
   (1 . exit-handler)
   (1 . expand-file-name)
   (1 . expand-path)
   (1 . extract-condition)
   (1 . f16vector)
   (1 . f16vector->list)
   (1 . f16vector->vector)
   (1 . f16vector-add)
   (1 . f16vector-add!)
   (1 . f16vector-clamp)
   (1 . f16vector-clamp!)
   (1 . f16vector-copy)
   (1 . f16vector-copy!)
   (1 . f16vector-div)
   (1 . f16vector-div!)
   (1 . f16vector-dot)
   (1 . f16vector-fill!)
   (1 . f16vector-length)
   (1 . f16vector-mul)
   (1 . f16vector-mul!)
   (1 . f16vector-range-check)
   (1 . f16vector-ref)
   (1 . f16vector-set!)
   (1 . f16vector-sub)
   (1 . f16vector-sub!)
   (1 . f16vector-swap-bytes)
   (1 . f16vector-swap-bytes!)
   (1 . f16vector?)
   (1 . f32vector)
   (1 . f32vector->list)
   (1 . f32vector->vector)
   (1 . f32vector-add)
   (1 . f32vector-add!)
   (1 . f32vector-clamp)
   (1 . f32vector-clamp!)
   (1 . f32vector-copy)
   (1 . f32vector-copy!)
   (1 . f32vector-div)
   (1 . f32vector-div!)
   (1 . f32vector-dot)
   (1 . f32vector-fill!)
   (1 . f32vector-length)
   (1 . f32vector-mul)
   (1 . f32vector-mul!)
   (1 . f32vector-range-check)
   (1 . f32vector-ref)
   (1 . f32vector-set!)
   (1 . f32vector-sub)
   (1 . f32vector-sub!)
   (1 . f32vector-swap-bytes)
   (1 . f32vector-swap-bytes!)
   (1 . f32vector?)
   (1 . f64vector)
   (1 . f64vector->list)
   (1 . f64vector->vector)
   (1 . f64vector-add)
   (1 . f64vector-add!)
   (1 . f64vector-clamp)
   (1 . f64vector-clamp!)
   (1 . f64vector-copy)
   (1 . f64vector-copy!)
   (1 . f64vector-div)
   (1 . f64vector-div!)
   (1 . f64vector-dot)
   (1 . f64vector-fill!)
   (1 . f64vector-length)
   (1 . f64vector-mul)
   (1 . f64vector-mul!)
   (1 . f64vector-range-check)
   (1 . f64vector-ref)
   (1 . f64vector-set!)
   (1 . f64vector-sub)
   (1 . f64vector-sub!)
   (1 . f64vector-swap-bytes)
   (1 . f64vector-swap-bytes!)
   (1 . f64vector?)
   (1 . feature-eval)
   (1 . fifth)
   (1 . file->byte-generator)
   (1 . file->char-generator)
   (1 . file->generator)
   (1 . file->line-generator)
   (1 . file->list)
   (1 . file->sexp-generator)
   (1 . file->sexp-list)
   (1 . file->string)
   (1 . file->string-list)
   (1 . file-atime)
   (1 . file-ctime)
   (1 . file-dev)
   (1 . file-device=?)
   (1 . file-eq?)
   (1 . file-equal?)
   (1 . file-eqv?)
   (1 . file-exists?)
   (1 . file-filter)
   (1 . file-gid)
   (1 . file-ino)
   (1 . file-is-archive?)
   (1 . file-is-directory?)
   (1 . file-is-executable?)
   (1 . file-is-readable?)
   (1 . file-is-regular?)
   (1 . file-is-symlink?)
   (1 . file-is-writable?)
   (1 . file-mode)
   (1 . file-mtime)
   (1 . file-nlink)
   (1 . file-perm)
   (1 . file-rdev)
   (1 . file-size)
   (1 . file-type)
   (1 . file-uid)
   (1 . filter)
   (1 . filter!)
   (1 . filter$)
   (1 . filter-map)
   (1 . find)
   (1 . find$)
   (1 . find-all-tags)
   (1 . find-file-in-paths)
   (1 . find-in-queue)
   (1 . find-module)
   (1 . find-string-from-port?)
   (1 . find-tail)
   (1 . find-tail$)
   (1 . find-tmodule)
   (1 . finite?)
   (1 . first)
   (1 . first-set-bit)
   (1 . fixnum-width)
   (1 . fixnum?)
   (1 . flonum?)
   (1 . floor->exact)
   (1 . flush)
   (1 . flush-all-ports)
   (1 . fmod)
   (1 . fobject-copy)
   (1 . fobject-copy!)
   (1 . fobject-copy!/uv)
   (1 . fobject-offset)
   (1 . fobject-ref)
   (1 . fobject-ref/uv)
   (1 . fobject-set!)
   (1 . fobject-set!/uv)
   (1 . fobject-storage)
   (1 . fobject-type)
   (1 . fobject?)
   (1 . fold)
   (1 . fold-right)
   (1 . fold-right$)
   (1 . foldts)
   (1 . for-each$)
   (1 . force-output)
   (1 . foreign-pointer-attribute-get)
   (1 . foreign-pointer-attribute-set)
   (1 . foreign-pointer-attributes)
   (1 . format)
   (1 . format/ss)
   (1 . fourth)
   (1 . frexp)
   (1 . ftp-chdir)
   (1 . ftp-current-directory)
   (1 . ftp-get)
   (1 . ftp-help)
   (1 . ftp-list)
   (1 . ftp-login)
   (1 . ftp-ls)
   (1 . ftp-mdtm)
   (1 . ftp-mkdir)
   (1 . ftp-mtime)
   (1 . ftp-name-list)
   (1 . ftp-noop)
   (1 . ftp-put)
   (1 . ftp-put-unique)
   (1 . ftp-quit)
   (1 . ftp-remove)
   (1 . ftp-rename)
   (1 . ftp-rmdir)
   (1 . ftp-site)
   (1 . ftp-size)
   (1 . ftp-stat)
   (1 . ftp-system)
   (1 . ftype-alignment)
   (1 . ftype-endian)
   (1 . ftype-getter)
   (1 . ftype-name)
   (1 . ftype-putter)
   (1 . ftype-size)
   (1 . ftype:slot-name)
   (1 . ftype:slot-position)
   (1 . ftype:slot-type)
   (1 . ftype:struct-slots)
   (1 . gappend)
   (1 . gauche-architecture)
   (1 . gauche-architecture-directory)
   (1 . gauche-character-encoding)
   (1 . gauche-config)
   (1 . gauche-dso-suffix)
   (1 . gauche-library-directory)
   (1 . gauche-site-architecture-directory)
   (1 . gauche-site-library-directory)
   (1 . gauche-thread-type)
   (1 . gauche-version)
   (1 . gc)
   (1 . gc-stat)
   (1 . gcons)
   (1 . gdrop)
   (1 . gdrop-while)
   (1 . generator->list)
   (1 . gensym)
   (1 . gentemp)
   (1 . get-environment-variable)
   (1 . get-environment-variables)
   (1 . get-f16)
   (1 . get-f16be)
   (1 . get-f16le)
   (1 . get-f32)
   (1 . get-f32be)
   (1 . get-f32le)
   (1 . get-f64)
   (1 . get-f64be)
   (1 . get-f64le)
   (1 . get-fobject)
   (1 . get-keyword)
   (1 . get-os-type)
   (1 . get-output-byte-string)
   (1 . get-output-string)
   (1 . get-remaining-input-string)
   (1 . get-s16)
   (1 . get-s16be)
   (1 . get-s16le)
   (1 . get-s32)
   (1 . get-s32be)
   (1 . get-s32le)
   (1 . get-s64)
   (1 . get-s64be)
   (1 . get-s64le)
   (1 . get-s8)
   (1 . get-signal-handler)
   (1 . get-signal-handler-mask)
   (1 . get-signal-handlers)
   (1 . get-signal-pending-limit)
   (1 . get-u16)
   (1 . get-u16be)
   (1 . get-u16le)
   (1 . get-u32)
   (1 . get-u32be)
   (1 . get-u32le)
   (1 . get-u64)
   (1 . get-u64be)
   (1 . get-u64le)
   (1 . get-u8)
   (1 . getcwd)
   (1 . getenv)
   (1 . getpid)
   (1 . getter-with-setter)
   (1 . gettext)
   (1 . gfilter)
   (1 . giota)
   (1 . glob)
   (1 . glob-component->regexp)
   (1 . glob-fold)
   (1 . global-variable-bound?)
   (1 . global-variable-ref)
   (1 . gmap)
   (1 . greatest-fixnum)
   (1 . gtake)
   (1 . gtake-while)
   (1 . gunfold)
   (1 . has-setter?)
   (1 . hash)
   (1 . hash-table)
   (1 . hash-table->alist)
   (1 . hash-table-clear!)
   (1 . hash-table-copy)
   (1 . hash-table-delete!)
   (1 . hash-table-exists?)
   (1 . hash-table-fold)
   (1 . hash-table-for-each)
   (1 . hash-table-get)
   (1 . hash-table-keys)
   (1 . hash-table-map)
   (1 . hash-table-num-entries)
   (1 . hash-table-pop!)
   (1 . hash-table-push!)
   (1 . hash-table-put!)
   (1 . hash-table-stat)
   (1 . hash-table-type)
   (1 . hash-table-update!)
   (1 . hash-table-values)
   (1 . hash-table?)
   (1 . hexdigit)
   (1 . hmac-digest)
   (1 . hmac-digest-string)
   (1 . home-directory)
   (1 . home-vicinity)
   (1 . hook?)
   (1 . html-doctype)
   (1 . html-escape)
   (1 . html-escape-string)
   (1 . html5)
   (1 . html:a)
   (1 . html:abbr)
   (1 . html:acronym)
   (1 . html:address)
   (1 . html:area)
   (1 . html:b)
   (1 . html:base)
   (1 . html:bdo)
   (1 . html:big)
   (1 . html:blockquote)
   (1 . html:body)
   (1 . html:br)
   (1 . html:button)
   (1 . html:caption)
   (1 . html:cite)
   (1 . html:code)
   (1 . html:col)
   (1 . html:colgroup)
   (1 . html:dd)
   (1 . html:del)
   (1 . html:dfn)
   (1 . html:div)
   (1 . html:dl)
   (1 . html:dt)
   (1 . html:em)
   (1 . html:fieldset)
   (1 . html:form)
   (1 . html:frame)
   (1 . html:frameset)
   (1 . html:h1)
   (1 . html:h2)
   (1 . html:h3)
   (1 . html:h4)
   (1 . html:h5)
   (1 . html:h6)
   (1 . html:head)
   (1 . html:hr)
   (1 . html:html)
   (1 . html:i)
   (1 . html:iframe)
   (1 . html:img)
   (1 . html:input)
   (1 . html:ins)
   (1 . html:kbd)
   (1 . html:label)
   (1 . html:legend)
   (1 . html:li)
   (1 . html:link)
   (1 . html:map)
   (1 . html:meta)
   (1 . html:noframes)
   (1 . html:noscript)
   (1 . html:object)
   (1 . html:ol)
   (1 . html:optgroup)
   (1 . html:option)
   (1 . html:p)
   (1 . html:param)
   (1 . html:pre)
   (1 . html:q)
   (1 . html:samp)
   (1 . html:script)
   (1 . html:select)
   (1 . html:small)
   (1 . html:span)
   (1 . html:strong)
   (1 . html:style)
   (1 . html:sub)
   (1 . html:sup)
   (1 . html:table)
   (1 . html:tbody)
   (1 . html:td)
   (1 . html:textarea)
   (1 . html:tfoot)
   (1 . html:th)
   (1 . html:thead)
   (1 . html:title)
   (1 . html:tr)
   (1 . html:tt)
   (1 . html:ul)
   (1 . html:var)
   (1 . http-blob-sender)
   (1 . http-compose-form-data)
   (1 . http-compose-query)
   (1 . http-default-auth-handler)
   (1 . http-delete)
   (1 . http-file-receiver)
   (1 . http-file-sender)
   (1 . http-get)
   (1 . http-head)
   (1 . http-multipart-sender)
   (1 . http-null-receiver)
   (1 . http-null-sender)
   (1 . http-oport-receiver)
   (1 . http-post)
   (1 . http-put)
   (1 . http-request)
   (1 . http-secure-connection-available?)
   (1 . http-string-receiver)
   (1 . http-string-sender)
   (1 . icmp-echo-ident)
   (1 . icmp-echo-sequence)
   (1 . icmp-fill-header!)
   (1 . icmp-packet-code)
   (1 . icmp-packet-type)
   (1 . icmp4-describe-packet)
   (1 . icmp4-exceeded-code->string)
   (1 . icmp4-fill-checksum!)
   (1 . icmp4-fill-echo!)
   (1 . icmp4-message-type->string)
   (1 . icmp4-parameter-code->string)
   (1 . icmp4-redirect-code->string)
   (1 . icmp4-router-code->string)
   (1 . icmp4-security-code->string)
   (1 . icmp4-unreach-code->string)
   (1 . icmp6-describe-packet)
   (1 . icmp6-exceeded-code->string)
   (1 . icmp6-fill-echo!)
   (1 . icmp6-message-type->string)
   (1 . icmp6-parameter-code->string)
   (1 . icmp6-unreach-code->string)
   (1 . identifier->symbol)
   (1 . identifier?)
   (1 . identity)
   (1 . identity-array)
   (1 . if-car-sxpath)
   (1 . if-sxpath)
   (1 . implementation-vicinity)
   (1 . in-vicinity)
   (1 . inet-address->string)
   (1 . inet-checksum)
   (1 . inet-string->address)
   (1 . inet-string->address!)
   (1 . inexact-/)
   (1 . infinite?)
   (1 . input-serializer?)
   (1 . instance-slot-ref)
   (1 . instance-slot-set)
   (1 . integer->digit)
   (1 . integer->list)
   (1 . integer-length)
   (1 . integer-range->char-set)
   (1 . integer-range->char-set!)
   (1 . intersperse)
   (1 . iota)
   (1 . ip-destination-address)
   (1 . ip-header-length)
   (1 . ip-protocol)
   (1 . ip-source-address)
   (1 . ip-version)
   (1 . ipv4-global-address?)
   (1 . is-a?)
   (1 . isomorphic?)
   (1 . iterator->stream)
   (1 . job-acknowledge!)
   (1 . job-acknowledge-time)
   (1 . job-finish-time)
   (1 . job-mark-killed!)
   (1 . job-result)
   (1 . job-run!)
   (1 . job-start-time)
   (1 . job-status)
   (1 . job-touch!)
   (1 . job-wait)
   (1 . job?)
   (1 . join-timeout-exception?)
   (1 . judge-file)
   (1 . julian-day->date)
   (1 . julian-day->time-monotonic)
   (1 . julian-day->time-tai)
   (1 . julian-day->time-utc)
   (1 . keyword->string)
   (1 . keyword?)
   (1 . kmp-step)
   (1 . last)
   (1 . last-pair)
   (1 . lcs)
   (1 . lcs-edit-list)
   (1 . lcs-fold)
   (1 . lcs-with-positions)
   (1 . ldexp)
   (1 . least-fixnum)
   (1 . letter)
   (1 . library-exists?)
   (1 . library-fold)
   (1 . library-for-each)
   (1 . library-has-module?)
   (1 . library-map)
   (1 . library-vicinity)
   (1 . list*)
   (1 . list->bytes)
   (1 . list->char-set)
   (1 . list->char-set!)
   (1 . list->f16vector)
   (1 . list->f32vector)
   (1 . list->f64vector)
   (1 . list->generator)
   (1 . list->integer)
   (1 . list->peg-stream)
   (1 . list->queue)
   (1 . list->s16vector)
   (1 . list->s32vector)
   (1 . list->s64vector)
   (1 . list->s8vector)
   (1 . list->stream)
   (1 . list->sys-fdset)
   (1 . list->u16vector)
   (1 . list->u32vector)
   (1 . list->u64vector)
   (1 . list->u8vector)
   (1 . list-copy)
   (1 . list-index)
   (1 . list-tabulate)
   (1 . list=)
   (1 . load-bundle!)
   (1 . load-from-port)
   (1 . localized-template)
   (1 . log-open)
   (1 . log2-binary-factors)
   (1 . logand)
   (1 . logbit?)
   (1 . logcount)
   (1 . logior)
   (1 . lognot)
   (1 . logtest)
   (1 . logxor)
   (1 . lower)
   (1 . lset-adjoin)
   (1 . lset-diff+intersection)
   (1 . lset-diff+intersection!)
   (1 . lset-difference)
   (1 . lset-difference!)
   (1 . lset-intersection)
   (1 . lset-intersection!)
   (1 . lset-union)
   (1 . lset-union!)
   (1 . lset-xor)
   (1 . lset-xor!)
   (1 . lset<=)
   (1 . lset=)
   (1 . macro:eval)
   (1 . macro:load)
   (1 . macroexpand)
   (1 . macroexpand-1)
   (1 . main)
   (1 . make-array)
   (1 . make-bimap)
   (1 . make-byte-string)
   (1 . make-bytes)
   (1 . make-cgen-type)
   (1 . make-char-quotator)
   (1 . make-client-socket)
   (1 . make-compound-condition)
   (1 . make-condition)
   (1 . make-condition-type)
   (1 . make-condition-variable)
   (1 . make-csv-reader)
   (1 . make-csv-writer)
   (1 . make-date)
   (1 . make-directory*)
   (1 . make-empty-attlist)
   (1 . make-exchanger)
   (1 . make-f16array)
   (1 . make-f16vector)
   (1 . make-f32array)
   (1 . make-f32vector)
   (1 . make-f64array)
   (1 . make-f64vector)
   (1 . make-fobject)
   (1 . make-fstruct-type)
   (1 . make-gettext)
   (1 . make-glob-fs-fold)
   (1 . make-grapheme-cluster-breaker)
   (1 . make-grapheme-cluster-reader)
   (1 . make-hash-table)
   (1 . make-hook)
   (1 . make-http-connection)
   (1 . make-initial-:-dispatch)
   (1 . make-job)
   (1 . make-keyword)
   (1 . make-kmp-restart-vector)
   (1 . make-list)
   (1 . make-module)
   (1 . make-mtqueue)
   (1 . make-mutex)
   (1 . make-packer)
   (1 . make-parameter)
   (1 . make-peg-parse-error)
   (1 . make-peg-stream)
   (1 . make-queue)
   (1 . make-random-source)
   (1 . make-rbtree)
   (1 . make-record-type)
   (1 . make-rtd)
   (1 . make-s16array)
   (1 . make-s16vector)
   (1 . make-s32array)
   (1 . make-s32vector)
   (1 . make-s64array)
   (1 . make-s64vector)
   (1 . make-s8array)
   (1 . make-s8vector)
   (1 . make-server-socket)
   (1 . make-server-sockets)
   (1 . make-sockaddrs)
   (1 . make-socket)
   (1 . make-sparse-table)
   (1 . make-sparse-vector)
   (1 . make-stream)
   (1 . make-string-pointer)
   (1 . make-sys-addrinfo)
   (1 . make-text-progress-bar)
   (1 . make-thread)
   (1 . make-thread-pool)
   (1 . make-time)
   (1 . make-tree-map)
   (1 . make-trie)
   (1 . make-u16array)
   (1 . make-u16vector)
   (1 . make-u32array)
   (1 . make-u32vector)
   (1 . make-u64array)
   (1 . make-u64vector)
   (1 . make-u8array)
   (1 . make-u8vector)
   (1 . make-vicinity)
   (1 . make-weak-vector)
   (1 . make-word-breaker)
   (1 . make-word-reader)
   (1 . make-xml-token)
   (1 . map!)
   (1 . map$)
   (1 . map*)
   (1 . map-in-order)
   (1 . map-union)
   (1 . match:$-ref)
   (1 . match:error)
   (1 . match:every)
   (1 . md5-digest)
   (1 . md5-digest-string)
   (1 . member$)
   (1 . merge)
   (1 . merge!)
   (1 . method-code)
   (1 . mik:mik->sxml)
   (1 . mik:nico-playlist->mik)
   (1 . mime-body->file)
   (1 . mime-body->string)
   (1 . mime-compose-message)
   (1 . mime-compose-message-string)
   (1 . mime-compose-parameters)
   (1 . mime-decode-text)
   (1 . mime-decode-word)
   (1 . mime-encode-text)
   (1 . mime-encode-word)
   (1 . mime-make-boundary)
   (1 . mime-parse-content-disposition)
   (1 . mime-parse-content-type)
   (1 . mime-parse-message)
   (1 . mime-parse-parameters)
   (1 . mime-parse-version)
   (1 . mime-retrieve-body)
   (1 . min&max)
   (1 . mkdir)
   (1 . modf)
   (1 . modified-julian-day->date)
   (1 . modified-julian-day->time-monotonic)
   (1 . modified-julian-day->time-tai)
   (1 . modified-julian-day->time-utc)
   (1 . module-exports)
   (1 . module-imports)
   (1 . module-name)
   (1 . module-name->path)
   (1 . module-parents)
   (1 . module-precedence-list)
   (1 . module-table)
   (1 . module?)
   (1 . monotonic-merge) ;;testpass
   (1 . move-file)
   (1 . mt-random-fill-f32vector!)
   (1 . mt-random-fill-f64vector!)
   (1 . mt-random-fill-u32vector!)
   (1 . mt-random-get-state)
   (1 . mt-random-integer)
   (1 . mt-random-real)
   (1 . mt-random-real0)
   (1 . mt-random-set-seed!)
   (1 . mt-random-set-state!)
   (1 . mtqueue-max-length)
   (1 . mtqueue-room)
   (1 . mtqueue?)
   (1 . mutex-lock!)
   (1 . mutex-name)
   (1 . mutex-specific)
   (1 . mutex-specific-set!)
   (1 . mutex-state)
   (1 . mutex-unlock!)
   (1 . mutex?)
   (1 . name-compare)
   (1 . nan?)
   (1 . native-endian)
   (1 . ndbm-clearerror)
   (1 . ndbm-close)
   (1 . ndbm-closed?)
   (1 . ndbm-delete)
   (1 . ndbm-error)
   (1 . ndbm-exists?)
   (1 . ndbm-fetch)
   (1 . ndbm-firstkey)
   (1 . ndbm-nextkey)
   (1 . ndbm-open)
   (1 . ndbm-store)
   (1 . next-token)
   (1 . next-token-of)
   (1 . ngettext)
   (1 . ninth)
   (1 . node-closure)
   (1 . node-eq?)
   (1 . node-equal?)
   (1 . node-join)
   (1 . node-or)
   (1 . node-pos)
   (1 . node-reduce)
   (1 . node-reverse)
   (1 . node-self)
   (1 . node-trace)
   (1 . nodeset?)
   (1 . not-pair?)
   (1 . nothing)
   (1 . ntype-names??)
   (1 . ntype-namespace-id??)
   (1 . ntype??)
   (1 . null-device)
   (1 . null-generator)
   (1 . null-list?)
   (1 . number->stream)
   (1 . open)
   (1 . open-coding-aware-port)
   (1 . open-file)
   (1 . open-info-file)
   (1 . open-input-buffered-port)
   (1 . open-input-conversion-port)
   (1 . open-input-fd-port)
   (1 . open-input-limited-length-port)
   (1 . open-input-process-port)
   (1 . open-input-string)
   (1 . open-input-uvector)
   (1 . open-output-buffered-port)
   (1 . open-output-conversion-port)
   (1 . open-output-fd-port)
   (1 . open-output-process-port)
   (1 . open-output-string)
   (1 . open-output-uvector)
   (1 . option)
   (1 . option?)
   (1 . output-port-height)
   (1 . output-port-width)
   (1 . output-serializer?)
   (1 . p)
   (1 . pa$)
   (1 . pack)
   (1 . pair-fold)
   (1 . pair-fold-right)
   (1 . pair-for-each)
   (1 . parse-cookie-string)
   (1 . parse-json)
   (1 . parse-json-string)
   (1 . parser-error)
   (1 . partition)
   (1 . partition!)
   (1 . partition$)
   (1 . path->module-name)
   (1 . path-extension)
   (1 . path-sans-extension)
   (1 . path-separator)
   (1 . path-swap-extension)
   (1 . pathname->vicinity)
   (1 . peek-byte)
   (1 . peek-next-char)
   (1 . peg-parse-port)
   (1 . peg-parse-string)
   (1 . peg-run-parser)
   (1 . peg-stream-peek!)
   (1 . peg-stream-position)
   (1 . permutations)
   (1 . permutations*)
   (1 . permutations*-for-each)
   (1 . permutations-for-each)
   (1 . port->byte-string)
   (1 . port->incomplete-string)
   (1 . port->list)
   (1 . port->peg-stream)
   (1 . port->sexp-list)
   (1 . port->stream)
   (1 . port->string)
   (1 . port->string-list)
   (1 . port-buffering)
   (1 . port-case-fold-set!)
   (1 . port-closed?)
   (1 . port-current-line)
   (1 . port-fd-dup!)
   (1 . port-file-number)
   (1 . port-fold)
   (1 . port-fold-right)
   (1 . port-for-each)
   (1 . port-map)
   (1 . port-name)
   (1 . port-position-prefix)
   (1 . port-seek)
   (1 . port-tell)
   (1 . port-type)
   (1 . posix-access)
   (1 . posix-chmod)
   (1 . posix-ctime)
   (1 . posix-domain-name)
   (1 . posix-fork)
   (1 . posix-getlogin)
   (1 . posix-gmtime)
   (1 . posix-host-name)
   (1 . posix-localtime)
   (1 . posix-mktime)
   (1 . posix-pipe)
   (1 . posix-rename)
   (1 . posix-rmdir)
   (1 . posix-stat)
   (1 . posix-stat->vector)
   (1 . posix-strftime)
   (1 . posix-symlink)
   (1 . posix-time)
   (1 . posix-tm->vector)
   (1 . posix-uname)
   (1 . posix-unlink)
   (1 . posix-wait)
   (1 . post-order)
   (1 . power-set)
   (1 . power-set*)
   (1 . power-set*-for-each)
   (1 . power-set-binary)
   (1 . power-set-for-each)
   (1 . pp)
   (1 . pre-post-order)
   (1 . pretty-print-array)
   (1 . prim-test)
   (1 . print)
   (1 . print-strings)
   (1 . procedure-arity-includes?)
   (1 . procedure-info)
   (1 . process-alive?)
   (1 . process-continue)
   (1 . process-error)
   (1 . process-input)
   (1 . process-kill)
   (1 . process-list)
   (1 . process-output)
   (1 . process-output->string)
   (1 . process-output->string-list)
   (1 . process-send-signal)
   (1 . process-stop)
   (1 . process-wait)
   (1 . process-wait-any)
   (1 . process?)
   (1 . profiler-get-result)
   (1 . profiler-reset)
   (1 . profiler-show)
   (1 . profiler-show-load-stats)
   (1 . profiler-start)
   (1 . profiler-stop)
   (1 . program-arguments)  ;;testpass
   (1 . program-vicinity)
   (1 . promise-kind)
   (1 . promise?)
   (1 . proper-list?)
   (1 . provide)
   (1 . provided?)
   (1 . put-f16!)
   (1 . put-f16be!)
   (1 . put-f16le!)
   (1 . put-f32!)
   (1 . put-f32be!)
   (1 . put-f32le!)
   (1 . put-f64!)
   (1 . put-f64be!)
   (1 . put-f64le!)
   (1 . put-fobject!)
   (1 . put-s16!)
   (1 . put-s16be!)
   (1 . put-s16le!)
   (1 . put-s32!)
   (1 . put-s32be!)
   (1 . put-s32le!)
   (1 . put-s64!)
   (1 . put-s64be!)
   (1 . put-s64le!)
   (1 . put-s8!)
   (1 . put-u16!)
   (1 . put-u16be!)
   (1 . put-u16le!)
   (1 . put-u32!)
   (1 . put-u32be!)
   (1 . put-u32le!)
   (1 . put-u64!)
   (1 . put-u64be!)
   (1 . put-u64le!)
   (1 . put-u8!)
   (1 . queue->list)
   (1 . queue-empty?)
   (1 . queue-front)
   (1 . queue-length)
   (1 . queue-pop!)
   (1 . queue-pop/wait!)
   (1 . queue-push!)
   (1 . queue-push-unique!)
   (1 . queue-push/wait!)
   (1 . queue-rear)
   (1 . queue?)
   (1 . quoted-printable-decode)
   (1 . quoted-printable-decode-string)
   (1 . quoted-printable-encode)
   (1 . quoted-printable-encode-string)
   (1 . quotient&remainder)
   (1 . raise)
   (1 . random)
   (1 . random-integer)
   (1 . random-real)
   (1 . random-source-make-integers)
   (1 . random-source-make-reals)
   (1 . random-source-pseudo-randomize!)
   (1 . random-source-randomize!)
   (1 . random-source-state-ref)
   (1 . random-source-state-set!)
   (1 . random-source?)
   (1 . rassoc)
   (1 . rassoc-ref)
   (1 . rassq)
   (1 . rassq-ref)
   (1 . rassv)
   (1 . rassv-ref)
   (1 . rbtree->alist)
   (1 . rbtree-copy)
   (1 . rbtree-delete!)
   (1 . rbtree-empty?)
   (1 . rbtree-exists?)
   (1 . rbtree-extract-max!)
   (1 . rbtree-extract-min!)
   (1 . rbtree-fold)
   (1 . rbtree-fold-right)
   (1 . rbtree-get)
   (1 . rbtree-keys)
   (1 . rbtree-max)
   (1 . rbtree-min)
   (1 . rbtree-num-entries)
   (1 . rbtree-pop!)
   (1 . rbtree-push!)
   (1 . rbtree-put!)
   (1 . rbtree-update!)
   (1 . rbtree-values)
   (1 . rbtree?)
   (1 . read-ber-integer)
   (1 . read-binary-double)
   (1 . read-binary-float)
   (1 . read-binary-long)
   (1 . read-binary-short)
   (1 . read-binary-sint)
   (1 . read-binary-sint16)
   (1 . read-binary-sint32)
   (1 . read-binary-sint64)
   (1 . read-binary-sint8)
   (1 . read-binary-uint)
   (1 . read-binary-uint16)
   (1 . read-binary-uint32)
   (1 . read-binary-uint64)
   (1 . read-binary-uint8)
   (1 . read-binary-ulong)
   (1 . read-binary-ushort)
   (1 . read-block)
   (1 . read-block!)
   (1 . read-byte)
   (1 . read-char-set)
   (1 . read-eval-print-loop)
   (1 . read-f16)
   (1 . read-f32)
   (1 . read-f64)
   (1 . read-fobject)
   (1 . read-fobject!/uv)
   (1 . read-from-string)
   (1 . read-line)
   (1 . read-list)
   (1 . read-reference-has-value?)
   (1 . read-reference-value)
   (1 . read-reference?)
   (1 . read-s16)
   (1 . read-s32)
   (1 . read-s64)
   (1 . read-s8)
   (1 . read-sint)
   (1 . read-string)
   (1 . read-u16)
   (1 . read-u32)
   (1 . read-u64)
   (1 . read-u8)
   (1 . read-uint)
   (1 . read-with-shared-structure)
   (1 . read/ss)
   (1 . record-accessor)
   (1 . record-constructor)
   (1 . record-modifier)
   (1 . record-predicate)
   (1 . record-rtd)
   (1 . record-type-descriptor)
   (1 . record-type-fields)
   (1 . record-type-name)
   (1 . record?)
   (1 . redefine-class!)
   (1 . reduce)
   (1 . reduce$)
   (1 . reduce-right)
   (1 . reduce-right$)
   (1 . ref*)
   (1 . regexp->string)
   (1 . regexp-ast)  ;;testpass
   (1 . regexp-case-fold?)
   (1 . regexp-compile)
   (1 . regexp-optimize)
   (1 . regexp-parse)
   (1 . regexp-quote)
   (1 . regexp-replace)
   (1 . regexp-replace*)
   (1 . regexp-replace-all)
   (1 . regexp-replace-all*)
   (1 . regexp-unparse)
   (1 . regexp?)
   (1 . regmatch?)
   (1 . relative-path?)
   (1 . relnum-compare)
   (1 . reload)
   (1 . reload-modified-modules)
   (1 . remove)
   (1 . remove!)
   (1 . remove$)
   (1 . remove-directory*)
   (1 . remove-file)
   (1 . remove-files)
   (1 . remove-from-queue!)
   (1 . remq)
   (1 . remv)
   (1 . rename-file)
   (1 . replace-range)
   (1 . report-error)
   (1 . report-time-results)
   (1 . report:print)
   (1 . require-if)
   (1 . reset-http-connection)
   (1 . resolve-path)
   (1 . reverse!)
   (1 . reverse-bit-field)
   (1 . reverse-bits->generator)
   (1 . reverse-list->string)
   (1 . reverse-list->vector)
   (1 . reverse-vector->generator)
   (1 . reverse-vector->list)
   (1 . rfc822-atom)
   (1 . rfc822-date->date)
   (1 . rfc822-dot-atom)
   (1 . rfc822-field->tokens)
   (1 . rfc822-header->list)
   (1 . rfc822-header-ref)
   (1 . rfc822-invalid-header-field)
   (1 . rfc822-next-token)
   (1 . rfc822-parse-date)
   (1 . rfc822-parse-errorf)
   (1 . rfc822-quoted-string)
   (1 . rfc822-read-headers)
   (1 . rfc822-skip-cfws)
   (1 . rfc822-write-headers)
   (1 . rope->string)
   (1 . rope-finalize)
   (1 . rotate-bit-field)
   (1 . round->exact)
   (1 . rtd-all-field-names)
   (1 . rtd-field-mutable?)
   (1 . rtd-field-names)
   (1 . rtd-name)
   (1 . rtd-parent)
   (1 . rtd?)
   (1 . run-cgi-script->header&body)
   (1 . run-cgi-script->string)
   (1 . run-cgi-script->string-list)
   (1 . run-cgi-script->sxml)
   (1 . run-command-sudo)
   (1 . run-process)
   (1 . rxmatch)
   (1 . rxmatch->string)
   (1 . rxmatch-after)
   (1 . rxmatch-before)
   (1 . rxmatch-end)
   (1 . rxmatch-num-matches)
   (1 . rxmatch-start)
   (1 . rxmatch-substring)
   (1 . s16vector)
   (1 . s16vector->list)
   (1 . s16vector->vector)
   (1 . s16vector-add)
   (1 . s16vector-add!)
   (1 . s16vector-and)
   (1 . s16vector-and!)
   (1 . s16vector-clamp)
   (1 . s16vector-clamp!)
   (1 . s16vector-copy)
   (1 . s16vector-copy!)
   (1 . s16vector-dot)
   (1 . s16vector-fill!)
   (1 . s16vector-ior)
   (1 . s16vector-ior!)
   (1 . s16vector-length)
   (1 . s16vector-mul)
   (1 . s16vector-mul!)
   (1 . s16vector-range-check)
   (1 . s16vector-ref)
   (1 . s16vector-set!)
   (1 . s16vector-sub)
   (1 . s16vector-sub!)
   (1 . s16vector-swap-bytes)
   (1 . s16vector-swap-bytes!)
   (1 . s16vector-xor)
   (1 . s16vector-xor!)
   (1 . s16vector?)
   (1 . s32vector)
   (1 . s32vector->list)
   (1 . s32vector->string)
   (1 . s32vector->vector)
   (1 . s32vector-add)
   (1 . s32vector-add!)
   (1 . s32vector-and)
   (1 . s32vector-and!)
   (1 . s32vector-clamp)
   (1 . s32vector-clamp!)
   (1 . s32vector-copy)
   (1 . s32vector-copy!)
   (1 . s32vector-dot)
   (1 . s32vector-fill!)
   (1 . s32vector-ior)
   (1 . s32vector-ior!)
   (1 . s32vector-length)
   (1 . s32vector-mul)
   (1 . s32vector-mul!)
   (1 . s32vector-range-check)
   (1 . s32vector-ref)
   (1 . s32vector-set!)
   (1 . s32vector-sub)
   (1 . s32vector-sub!)
   (1 . s32vector-swap-bytes)
   (1 . s32vector-swap-bytes!)
   (1 . s32vector-xor)
   (1 . s32vector-xor!)
   (1 . s32vector?)
   (1 . s64vector)
   (1 . s64vector->list)
   (1 . s64vector->vector)
   (1 . s64vector-add)
   (1 . s64vector-add!)
   (1 . s64vector-and)
   (1 . s64vector-and!)
   (1 . s64vector-clamp)
   (1 . s64vector-clamp!)
   (1 . s64vector-copy)
   (1 . s64vector-copy!)
   (1 . s64vector-dot)
   (1 . s64vector-fill!)
   (1 . s64vector-ior)
   (1 . s64vector-ior!)
   (1 . s64vector-length)
   (1 . s64vector-mul)
   (1 . s64vector-mul!)
   (1 . s64vector-range-check)
   (1 . s64vector-ref)
   (1 . s64vector-set!)
   (1 . s64vector-sub)
   (1 . s64vector-sub!)
   (1 . s64vector-swap-bytes)
   (1 . s64vector-swap-bytes!)
   (1 . s64vector-xor)
   (1 . s64vector-xor!)
   (1 . s64vector?)
   (1 . s8vector)
   (1 . s8vector->list)
   (1 . s8vector->string)
   (1 . s8vector->vector)
   (1 . s8vector-add)
   (1 . s8vector-add!)
   (1 . s8vector-and)
   (1 . s8vector-and!)
   (1 . s8vector-clamp)
   (1 . s8vector-clamp!)
   (1 . s8vector-copy)
   (1 . s8vector-copy!)
   (1 . s8vector-dot)
   (1 . s8vector-fill!)
   (1 . s8vector-ior)
   (1 . s8vector-ior!)
   (1 . s8vector-length)
   (1 . s8vector-mul)
   (1 . s8vector-mul!)
   (1 . s8vector-range-check)
   (1 . s8vector-ref)
   (1 . s8vector-set!)
   (1 . s8vector-sub)
   (1 . s8vector-sub!)
   (1 . s8vector-xor)
   (1 . s8vector-xor!)
   (1 . s8vector?)
   (1 . scheme-file-suffix)
   (1 . scheme-implementation-home-page)
   (1 . scheme-implementation-type)
   (1 . scheme-implementation-version)
   (1 . second)
   (1 . seconds->time)
   (1 . select-first-kid)
   (1 . select-kids)
   (1 . select-tmodule)
   (1 . serializer?)
   (1 . set-random-seed!)
   (1 . set-signal-handler!)
   (1 . set-signal-pending-limit)
   (1 . setenv!)
   (1 . setter)
   (1 . seventh)
   (1 . sha1-digest)
   (1 . sha1-digest-string)
   (1 . sha224-digest)
   (1 . sha224-digest-string)
   (1 . sha256-digest)
   (1 . sha256-digest-string)
   (1 . sha384-digest)
   (1 . sha384-digest-string)
   (1 . sha512-digest)
   (1 . sha512-digest-string)
   (1 . shape)
   (1 . shape-for-each)
   (1 . share-array)
   (1 . shell-escape-string)
   (1 . simplify-path)
   (1 . sinh)
   (1 . sixth)
   (1 . skip-until)
   (1 . skip-while)
   (1 . slib:error)
   (1 . slib:eval)
   (1 . slib:eval-load)
   (1 . slib:exit)
   (1 . slib:in-catalog?)
   (1 . slib:load)
   (1 . slib:load-compiled)
   (1 . slib:load-source)
   (1 . slib:pathnameize-load)
   (1 . slib:provide)
   (1 . slib:provided?)
   (1 . slib:report)
   (1 . slib:report-locations)
   (1 . slib:report-version)
   (1 . slib:require)
   (1 . slib:require-if)
   (1 . slib:version)
   (1 . slib:warn)
   (1 . slices)
   (1 . slot-bound-using-accessor?)
   (1 . slot-bound?)
   (1 . slot-definition-accessor)
   (1 . slot-definition-allocation)
   (1 . slot-definition-getter)
   (1 . slot-definition-name)
   (1 . slot-definition-option)
   (1 . slot-definition-options)
   (1 . slot-definition-setter)
   (1 . slot-exists?)
   (1 . slot-initialize-using-accessor!)
   (1 . slot-pop!)
   (1 . slot-push!)
   (1 . slot-ref)
   (1 . slot-ref-using-accessor)
   (1 . slot-set!)
   (1 . slot-set-using-accessor!)
   (1 . socket-accept)
   (1 . socket-address)
   (1 . socket-bind)
   (1 . socket-buildmsg)
   (1 . socket-close)
   (1 . socket-connect)
   (1 . socket-fd)
   (1 . socket-getpeername)
   (1 . socket-getsockname)
   (1 . socket-getsockopt)
   (1 . socket-input-port)
   (1 . socket-ioctl)
   (1 . socket-listen)
   (1 . socket-output-port)
   (1 . socket-recv)
   (1 . socket-recv!)
   (1 . socket-recvfrom)
   (1 . socket-recvfrom!)
   (1 . socket-send)
   (1 . socket-sendmsg)
   (1 . socket-sendto)
   (1 . socket-setsockopt)
   (1 . socket-shutdown)
   (1 . socket-status)
   (1 . software-type)
   (1 . sort)
   (1 . sort!)
   (1 . sort-by)
   (1 . sort-by!)
   (1 . sorted?)
   (1 . space)
   (1 . spaces)
   (1 . span)
   (1 . span!)
   (1 . sparse-table-clear!)
   (1 . sparse-table-copy)
   (1 . sparse-table-delete!)
   (1 . sparse-table-exists?)
   (1 . sparse-table-fold)
   (1 . sparse-table-for-each)
   (1 . sparse-table-keys)
   (1 . sparse-table-map)
   (1 . sparse-table-num-entries)
   (1 . sparse-table-pop!)
   (1 . sparse-table-push!)
   (1 . sparse-table-ref)
   (1 . sparse-table-set!)
   (1 . sparse-table-update!)
   (1 . sparse-table-values)
   (1 . sparse-vector-clear!)
   (1 . sparse-vector-copy)
   (1 . sparse-vector-delete!)
   (1 . sparse-vector-exists?)
   (1 . sparse-vector-fold)
   (1 . sparse-vector-for-each)
   (1 . sparse-vector-inc!)
   (1 . sparse-vector-keys)
   (1 . sparse-vector-map)
   (1 . sparse-vector-max-index-bits)
   (1 . sparse-vector-num-entries)
   (1 . sparse-vector-pop!)
   (1 . sparse-vector-push!)
   (1 . sparse-vector-ref)
   (1 . sparse-vector-set!)
   (1 . sparse-vector-update!)
   (1 . sparse-vector-values)
   (1 . split-at)
   (1 . split-at!)
   (1 . split-at*)
   (1 . split-string)
   (1 . sql-tokenize)
   (1 . srfi-42--dispatch)
   (1 . srfi-42--dispatch-ref)
   (1 . srfi-42--dispatch-set!)
   (1 . srl:display-sxml)
   (1 . srl:parameterizable)
   (1 . srl:sxml->html)
   (1 . srl:sxml->html-noindent)
   (1 . srl:sxml->string)
   (1 . srl:sxml->xml)
   (1 . srl:sxml->xml-noindent)
   (1 . ssax:assert-token)
   (1 . ssax:complete-start-tag)
   (1 . ssax:handle-parsed-entity)
   (1 . ssax:ncname-starting-char?)
   (1 . ssax:read-NCName)
   (1 . ssax:read-QName)
   (1 . ssax:read-attributes)
   (1 . ssax:read-cdata-body)
   (1 . ssax:read-char-data)
   (1 . ssax:read-char-ref)
   (1 . ssax:read-external-id)
   (1 . ssax:read-markup-token)
   (1 . ssax:read-pi-body-as-string)
   (1 . ssax:resolve-name)
   (1 . ssax:reverse-collect-str)
   (1 . ssax:reverse-collect-str-drop-ws)
   (1 . ssax:scan-Misc)
   (1 . ssax:skip-S)
   (1 . ssax:skip-internal-dtd)
   (1 . ssax:skip-pi)
   (1 . ssax:uri-string->symbol)
   (1 . ssax:warn)
   (1 . ssax:xml->sxml)
   (1 . stable-sort)
   (1 . stable-sort!)
   (1 . stable-sort-by)
   (1 . stable-sort-by!)
   (1 . standard-error-port)
   (1 . standard-input-port)
   (1 . standard-output-port)
   (1 . store-bundle!)
   (1 . stream)
   (1 . stream->list)
   (1 . stream->number)
   (1 . stream->string)
   (1 . stream->symbol)
   (1 . stream-any)
   (1 . stream-append)
   (1 . stream-break)
   (1 . stream-butlast)
   (1 . stream-butlast-n)
   (1 . stream-caaaar)
   (1 . stream-caaadr)
   (1 . stream-caaar)
   (1 . stream-caadar)
   (1 . stream-caaddr)
   (1 . stream-caadr)
   (1 . stream-caar)
   (1 . stream-cadaar)
   (1 . stream-cadadr)
   (1 . stream-cadar)
   (1 . stream-caddar)
   (1 . stream-cadddr)
   (1 . stream-caddr)
   (1 . stream-cadr)
   (1 . stream-car)
   (1 . stream-cdaaar)
   (1 . stream-cdaadr)
   (1 . stream-cdaar)
   (1 . stream-cdadar)
   (1 . stream-cdaddr)
   (1 . stream-cdadr)
   (1 . stream-cdar)
   (1 . stream-cddaar)
   (1 . stream-cddadr)
   (1 . stream-cddar)
   (1 . stream-cdddar)
   (1 . stream-cddddr)
   (1 . stream-cdddr)
   (1 . stream-cddr)
   (1 . stream-cdr)
   (1 . stream-concatenate)
   (1 . stream-cons*)
   (1 . stream-count)
   (1 . stream-delete)
   (1 . stream-delete-duplicates)
   (1 . stream-drop)
   (1 . stream-drop-safe)
   (1 . stream-drop-while)
   (1 . stream-eighth)
   (1 . stream-every)
   (1 . stream-fifth)
   (1 . stream-filter)
   (1 . stream-find)
   (1 . stream-find-tail)
   (1 . stream-first)
   (1 . stream-for-each)
   (1 . stream-format)
   (1 . stream-fourth)
   (1 . stream-grep)
   (1 . stream-index)
   (1 . stream-intersperse)
   (1 . stream-iota)
   (1 . stream-last)
   (1 . stream-last-n)
   (1 . stream-length)
   (1 . stream-length>=)
   (1 . stream-lines)
   (1 . stream-map)
   (1 . stream-member)
   (1 . stream-memq)
   (1 . stream-memv)
   (1 . stream-ninth)
   (1 . stream-null?)
   (1 . stream-pair?)
   (1 . stream-partition)
   (1 . stream-prefix=)
   (1 . stream-ref)
   (1 . stream-remove)
   (1 . stream-replace)
   (1 . stream-reverse)
   (1 . stream-second)
   (1 . stream-seventh)
   (1 . stream-sixth)
   (1 . stream-span)
   (1 . stream-split)
   (1 . stream-tabulate)
   (1 . stream-take)
   (1 . stream-take-safe)
   (1 . stream-take-while)
   (1 . stream-tenth)
   (1 . stream-third)
   (1 . stream-translate)
   (1 . stream-unfoldn)
   (1 . stream-xcons)
   (1 . stream=)
   (1 . stream?)
   (1 . string->char-set)
   (1 . string->char-set!)
   (1 . string->date)
   (1 . string->generator)
   (1 . string->grapheme-clusters)
   (1 . string->peg-stream)
   (1 . string->regexp)
   (1 . string->s32vector)
   (1 . string->s8vector)
   (1 . string->s8vector!)
   (1 . string->stream)
   (1 . string->u32vector)
   (1 . string->u8vector)
   (1 . string->u8vector!)
   (1 . string->uninterned-symbol)
   (1 . string->words)
   (1 . string-any)
   (1 . string-append/shared)
   (1 . string-byte-ref)
   (1 . string-byte-set!)
   (1 . string-ci<)
   (1 . string-ci<=)
   (1 . string-ci<>)
   (1 . string-ci=)
   (1 . string-ci>)
   (1 . string-ci>=)
   (1 . string-compare)
   (1 . string-compare-ci)
   (1 . string-complete->incomplete)
   (1 . string-concatenate)
   (1 . string-concatenate-reverse)
   (1 . string-concatenate-reverse/shared)
   (1 . string-concatenate/shared)
   (1 . string-contains)
   (1 . string-contains-ci)
   (1 . string-copy!)
   (1 . string-count)
   (1 . string-delete)
   (1 . string-downcase)
   (1 . string-downcase!)
   (1 . string-drop)
   (1 . string-drop-right)
   (1 . string-every)
   (1 . string-fill!)
   (1 . string-filter)
   (1 . string-find)
   (1 . string-fold)
   (1 . string-fold-right)
   (1 . string-foldcase)
   (1 . string-for-each)
   (1 . string-for-each-index)
   (1 . string-hash)
   (1 . string-hash-ci)
   (1 . string-immutable?)
   (1 . string-incomplete->complete)
   (1 . string-incomplete->complete!)
   (1 . string-incomplete?)
   (1 . string-index)
   (1 . string-index-right)
   (1 . string-interpolate)
   (1 . string-join)
   (1 . string-kmp-partial-search)
   (1 . string-lower)
   (1 . string-map)
   (1 . string-map!)
   (1 . string-null?)
   (1 . string-pad)
   (1 . string-pad-right)
   (1 . string-parse-final-start+end)
   (1 . string-parse-start+end)
   (1 . string-pointer-byte-index)
   (1 . string-pointer-copy)
   (1 . string-pointer-index)
   (1 . string-pointer-next!)
   (1 . string-pointer-prev!)
   (1 . string-pointer-ref)
   (1 . string-pointer-set!)
   (1 . string-pointer-substring)
   (1 . string-pointer?)
   (1 . string-prefix-ci?)
   (1 . string-prefix-length)
   (1 . string-prefix-length-ci)
   (1 . string-prefix?)
   (1 . string-replace)
   (1 . string-reverse)
   (1 . string-reverse!)
   (1 . string-rindex)
   (1 . string-scan)
   (1 . string-size)
   (1 . string-skip)
   (1 . string-skip-right)
   (1 . string-split)
   (1 . string-suffix-ci?)
   (1 . string-suffix-length)
   (1 . string-suffix-length-ci)
   (1 . string-suffix?)
   (1 . string-tabulate)
   (1 . string-take)
   (1 . string-take-right)
   (1 . string-titlecase)
   (1 . string-titlecase!)
   (1 . string-tokenize)
   (1 . string-tr)
   (1 . string-transliterate)
   (1 . string-trim)
   (1 . string-trim-both)
   (1 . string-trim-right)
   (1 . string-unfold)
   (1 . string-unfold-right)
   (1 . string-upcase)
   (1 . string-upcase!)
   (1 . string-upper)
   (1 . string-whitespace?)
   (1 . string-xcopy!)
   (1 . string<)
   (1 . string<=)
   (1 . string<>)
   (1 . string=)
   (1 . string>)
   (1 . string>=)
   (1 . sub-vicinity)
   (1 . subarray)
   (1 . subr?)
   (1 . substring-spec-ok?)
   (1 . substring/shared)
   (1 . substring?)
   (1 . subtract-duration)
   (1 . subtract-duration!)
   (1 . supported-character-encoding?)
   (1 . supported-character-encodings)
   (1 . swget)
   (1 . sxml:add-attr)
   (1 . sxml:add-attr!)
   (1 . sxml:add-aux)
   (1 . sxml:add-aux!)
   (1 . sxml:add-parents)
   (1 . sxml:ancestor)
   (1 . sxml:ancestor-or-self)
   (1 . sxml:attr)
   (1 . sxml:attr->html)
   (1 . sxml:attr->xml)
   (1 . sxml:attr-as-list)
   (1 . sxml:attr-list)
   (1 . sxml:attr-list-node)
   (1 . sxml:attr-list-u)
   (1 . sxml:attr-u)
   (1 . sxml:attribute)
   (1 . sxml:aux-as-list)
   (1 . sxml:aux-list)
   (1 . sxml:aux-list-node)
   (1 . sxml:aux-list-u)
   (1 . sxml:aux-node)
   (1 . sxml:aux-nodes)
   (1 . sxml:boolean)
   (1 . sxml:change-attr)
   (1 . sxml:change-attr!)
   (1 . sxml:change-attrlist)
   (1 . sxml:change-attrlist!)
   (1 . sxml:change-content)
   (1 . sxml:change-content!)
   (1 . sxml:change-name)
   (1 . sxml:change-name!)
   (1 . sxml:child)
   (1 . sxml:child-elements)
   (1 . sxml:child-nodes)
   (1 . sxml:clean)
   (1 . sxml:clean-feed)
   (1 . sxml:content)
   (1 . sxml:content-raw)
   (1 . sxml:descendant)
   (1 . sxml:descendant-or-self)
   (1 . sxml:element-name)
   (1 . sxml:element?)
   (1 . sxml:empty-element?)
   (1 . sxml:equal?)
   (1 . sxml:equality-cmp)
   (1 . sxml:error)
   (1 . sxml:filter)
   (1 . sxml:following)
   (1 . sxml:following-sibling)
   (1 . sxml:id)
   (1 . sxml:id-alist)
   (1 . sxml:invert)
   (1 . sxml:lookup)
   (1 . sxml:minimized?)
   (1 . sxml:name)
   (1 . sxml:name->ns-id)
   (1 . sxml:namespace)
   (1 . sxml:ncname)
   (1 . sxml:node-name)
   (1 . sxml:node-parent)
   (1 . sxml:node?)
   ;;testpass
;   (1 . sxml:non-terminated-html-tag?)
;   (1 . sxml:normalized?)
;   (1 . sxml:not-equal?)
;   (1 . sxml:ns-id)
  ; (1 . sxml:ns-id->nodes)
  ; (1 . sxml:ns-id->uri)
  ; (1 . sxml:ns-list)
  ; (1 . sxml:ns-prefix)
  ; (1 . sxml:ns-uri)
  ; (1 . sxml:ns-uri->id)
  ; (1 . sxml:ns-uri->nodes)
  ; (1 . sxml:num-attr)
  ; (1 . sxml:number)
  ; (1 . sxml:parent)
  ; (1 . sxml:preceding)
  ; (1 . sxml:preceding-sibling)
  ; (1 . sxml:relational-cmp)
  ; (1 . sxml:set-attr)
  ; (1 . sxml:set-attr!)
  ; (1 . sxml:shallow-minimized?)
  ; (1 . sxml:shallow-normalized?)
  ; (1 . sxml:squeeze)
  ; (1 . sxml:squeeze!)
  ; (1 . sxml:string)
  ; (1 . sxml:string->html)
  ; (1 . sxml:string->xml)
  ; (1 . sxml:string-value)
  ; (1 . sxml:sxml->html)
  ; (1 . sxml:sxml->xml)
  ; (1 . sxpath)
  ; (1 . symbol->stream)
  ; (1 . symbol-bound?)
  ; (1 . symbol-interned?)
  ; (1 . symbol-sans-prefix)
  ; (1 . sys-abort)
  ; (1 . sys-access)
  ; (1 . sys-alarm)
  ; (1 . sys-asctime)
 ;  (1 . sys-basename)
 ;  (1 . sys-cfgetispeed)
 ;  (1 . sys-cfgetospeed)
 ;  (1 . sys-cfsetispeed)
 ;  (1 . sys-cfsetospeed)
 ;  (1 . sys-chdir)
 ;  (1 . sys-chmod)
 ;  (1 . sys-chown)
 ;  (1 . sys-clearenv)
 ;  (1 . sys-close)
 ;  (1 . sys-closelog)
;  (1 . sys-crypt)
;   (1 . sys-ctermid)
;   (1 . sys-ctime)
;   (1 . sys-difftime)
;   (1 . sys-dirname)
;   (1 . sys-environ)
;   (1 . sys-environ->alist)
;   (1 . sys-exec)
;   (1 . sys-exit)
;   (1 . sys-fchmod)
;   (1 . sys-fcntl)
;   (1 . sys-fdset)
;   (1 . sys-fdset->list)
;   (1 . sys-fdset-clear!)
;   (1 . sys-fdset-copy!)
;   (1 . sys-fdset-max-fd)
;   (1 . sys-fdset-ref)
;   (1 . sys-fdset-set!)
;   (1 . sys-fork)
;   (1 . sys-fork-and-exec)
;   (1 . sys-forkpty)
;   (1 . sys-forkpty-and-exec)
;   (1 . sys-fstat)
;   (1 . sys-ftruncate)
;   (1 . sys-getaddrinfo)
;   (1 . sys-getcwd)
;   (1 . sys-getdomainname)
;   (1 . sys-getegid)
;   (1 . sys-getenv)
;   (1 . sys-geteuid)
;   (1 . sys-getgid)
;   (1 . sys-getgrgid)
;   (1 . sys-getgrnam)
;   (1 . sys-getgroups)
;   (1 . sys-gethostbyaddr)
;   (1 . sys-gethostbyname)
;   (1 . sys-gethostname)
;   (1 . sys-getloadavg)
;   (1 . sys-getlogin)
;   (1 . sys-getnameinfo)
;   (1 . sys-getpgid)
;   (1 . sys-getpgrp)
;   (1 . sys-getpid)
;   (1 . sys-getppid)
;   (1 . sys-getprotobyname)
;   (1 . sys-getprotobynumber)
;   (1 . sys-getpwnam)
;   (1 . sys-getpwuid)
;   (1 . sys-getrlimit)
;   (1 . sys-getservbyname)
;   (1 . sys-getservbyport)
;   (1 . sys-gettimeofday)
;   (1 . sys-getuid)
;   (1 . sys-gid->group-name)
;   (1 . sys-glob)
;   (1 . sys-gmtime)
;   (1 . sys-group-name->gid)
;   (1 . sys-htonl)
;   (1 . sys-htons)
;   (1 . sys-isatty)
;   (1 . sys-kill)
;   (1 . sys-lchown)
;   (1 . sys-link)
;   (1 . sys-localeconv)
;   (1 . sys-localtime)
;   (1 . sys-logmask)
;   (1 . sys-lstat)
;   (1 . sys-mkdir)
;   (1 . sys-mkfifo)
;   (1 . sys-mkstemp)
;   (1 . sys-mktime)
;   (1 . sys-nanosleep)
;   (1 . sys-normalize-pathname)
;   (1 . sys-ntohl)
;   (1 . sys-ntohs)
;   (1 . sys-openlog)
;   (1 . sys-openpty)
;   (1 . sys-pause)
;   (1 . sys-pipe)
;   (1 . sys-putenv)
;   (1 . sys-random)
;   (1 . sys-readdir)
;   (1 . sys-readlink)
;   (1 . sys-realpath)
;   (1 . sys-remove)
;   (1 . sys-rename)
;   (1 . sys-rmdir)
;   (1 . sys-select)
;   (1 . sys-select!)
;   (1 . sys-setenv)
;   (1 . sys-setgid)
;   (1 . sys-setlocale)
;   (1 . sys-setlogmask)
;   (1 . sys-setpgid)
;   (1 . sys-setrlimit)
;   (1 . sys-setsid)
;   (1 . sys-setuid)
;   (1 . sys-sigmask)
;   (1 . sys-signal-name)
;   (1 . sys-sigset)
;   (1 . sys-sigset-add!)
;   (1 . sys-sigset-delete!)
;   (1 . sys-sigset-empty!)
;   (1 . sys-sigset-fill!)
;   (1 . sys-sigsuspend)
;   (1 . sys-sigwait)
;   (1 . sys-sleep)
;   (1 . sys-srandom)
;   (1 . sys-stat)
;   (1 . sys-stat->atime)
;   (1 . sys-stat->ctime)
;   (1 . sys-stat->dev)
;   (1 . sys-stat->file-type)
;   (1 . sys-stat->gid)
;   (1 . sys-stat->ino)
;   (1 . sys-stat->mode)
;   (1 . sys-stat->mtime)
;   (1 . sys-stat->nlink)
;   (1 . sys-stat->rdev)
;   (1 . sys-stat->size)
;   (1 . sys-stat->type)
;   (1 . sys-stat->uid)
;   (1 . sys-strerror)
;   (1 . sys-strftime)
;   (1 . sys-symlink)
;   (1 . sys-syslog)
;   (1 . sys-system)
;   (1 . sys-tcdrain)
;   (1 . sys-tcflow)
;   (1 . sys-tcflush)
;   (1 . sys-tcgetattr)
;   (1 . sys-tcgetpgrp)
;   (1 . sys-tcsendbreak)
;   (1 . sys-tcsetattr)
;   (1 . sys-tcsetpgrp)
;   (1 . sys-time)
;   (1 . sys-times)
;   (1 . sys-tm->alist)
;   (1 . sys-tmpdir)
;   (1 . sys-tmpnam)
;   (1 . sys-truncate)
;   (1 . sys-ttyname)
;   (1 . sys-uid->user-name)
;   (1 . sys-umask)
;   (1 . sys-uname)
;   (1 . sys-unlink)
;   (1 . sys-unsetenv)
;   (1 . sys-user-name->uid)
;   (1 . sys-utime)
;   (1 . sys-wait)
;   (1 . sys-wait-exit-status)
;   (1 . sys-wait-exited?)
;   (1 . sys-wait-signaled?)
;   (1 . sys-wait-stopped?)
;   (1 . sys-wait-stopsig)
;   (1 . sys-wait-termsig)
;   (1 . sys-waitpid)
;   (1 . system)
;   (1 . tab)
;   (1 . tabulate-array)
;   (1 . take)
;   (1 . take!)
;   (1 . take*)
;   (1 . take-after)
;   (1 . take-right)
;   (1 . take-right*)
;   (1 . take-until)
;   (1 . take-while)
;   (1 . take-while!)
;   (1 . tanh)
;   (1 . tap)
;   (1 . temporary-file-name)
;   (1 . tenth)
;   (1 . terminate-all!)
;   (1 . terminated-thread-exception?)
;   (1 . test)
;   (1 . test-check)
;   (1 . test-end)
;   (1 . test-error)
;   (1 . test-error?)
;   (1 . test-module)
;   (1 . test-one-of)
;   (1 . test-record-file)
;   (1 . test-section)
;   (1 . test-start)
;   (1 . textdomain)
;   (1 . third)
;   (1 . thread-cont!)
;   (1 . thread-join!)
;   (1 . thread-name)
;   (1 . thread-pool-results)
;   (1 . thread-pool-shut-down?)
;   (1 . thread-sleep!)
;   (1 . thread-specific)
;   (1 . thread-specific-set!)
;   (1 . thread-start!)
;   (1 . thread-state)
;   (1 . thread-stop!)
;   (1 . thread-terminate!)
;   (1 . thread-yield!)
;   (1 . thread?)
;   (1 . time->seconds)
;   (1 . time-difference)
;   (1 . time-difference!)
;   (1 . time-monotonic->date)
;   (1 . time-monotonic->julian-day)
;   (1 . time-monotonic->modified-julian-day)
;   (1 . time-monotonic->time-tai)
;   (1 . time-monotonic->time-tai!)
;   (1 . time-monotonic->time-utc)
;   (1 . time-monotonic->time-utc!)
;   (1 . time-resolution)
;   (1 . time-result+)
;   (1 . time-result-)
;   (1 . time-tai->date)
;   (1 . time-tai->julian-day)
;   (1 . time-tai->modified-julian-day)
;   (1 . time-tai->time-monotonic)
;   (1 . time-tai->time-monotonic!)
;   (1 . time-tai->time-utc)
;   (1 . time-tai->time-utc!)
;   (1 . time-these)
;   (1 . time-these/report)
;   (1 . time-this)
;   (1 . time-utc->date)
;   (1 . time-utc->julian-day)
;   (1 . time-utc->modified-julian-day)
;   (1 . time-utc->time-monotonic)
;   (1 . time-utc->time-monotonic!)
;   (1 . time-utc->time-tai)
;   (1 . time-utc->time-tai!)
;   (1 . time<=?)
;   (1 . time<?)
;   (1 . time=?)
;   (1 . time>=?)
;   (1 . time>?)
;   (1 . time?)
;   (1 . tmodule-cname)
;   (1 . tmpnam)
;   (1 . toplevel-closure?)
;   (1 . topological-sort)
;   (1 . touch-file)
;   (1 . touch-instance!)
;   (1 . tr)
;   (1 . transliterate)
;   (1 . tree->string)
;   (1 . tree-fold)
;   (1 . tree-fold-bf)
;   (1 . tree-map->alist)
;   (1 . tree-map-ceiling)
;   (1 . tree-map-ceiling-key)
;   (1 . tree-map-ceiling-value)
;   (1 . tree-map-clear!)
;   (1 . tree-map-copy)
;   (1 . tree-map-delete!)
;   (1 . tree-map-empty?)
;   (1 . tree-map-exists?)
;   (1 . tree-map-floor)
;   (1 . tree-map-floor-key)
;   (1 . tree-map-floor-value)
;   (1 . tree-map-fold)
;   (1 . tree-map-fold-right)
;   (1 . tree-map-for-each)
;   (1 . tree-map-get)
;   (1 . tree-map-keys)
;   (1 . tree-map-map)
;   (1 . tree-map-max)
;   (1 . tree-map-min)
;   (1 . tree-map-num-entries)
;   (1 . tree-map-pop!)
;   (1 . tree-map-pop-max!)
;   (1 . tree-map-pop-min!)
;   (1 . tree-map-predecessor)
;   (1 . tree-map-predecessor-key)
;   (1 . tree-map-predecessor-value)
;   (1 . tree-map-push!)
;   (1 . tree-map-put!)
;   (1 . tree-map-successor)
;   (1 . tree-map-successor-key)
;   (1 . tree-map-successor-value)
;   (1 . tree-map-update!)
;   (1 . tree-map-values)
;   (1 . tree-map?)
;   (1 . tree-walk)
;   (1 . tree-walk-bf)
;   (1 . trie)
;   (1 . trie->hash-table)
;   (1 . trie->list)
;   (1 . trie-common-prefix)
;   (1 . trie-common-prefix-fold)
;   (1 . trie-common-prefix-for-each)
;   (1 . trie-common-prefix-keys)
;   (1 . trie-common-prefix-map)
;   (1 . trie-common-prefix-values)
;   (1 . trie-delete!)
;   (1 . trie-exists?)
;   (1 . trie-fold)
;   (1 . trie-for-each)
;   (1 . trie-get)
;   (1 . trie-keys)
;   (1 . trie-map)
;   (1 . trie-num-entries)
;   (1 . trie-put!)
;   (1 . trie-update!)
;   (1 . trie-values)
;   (1 . trie-with-keys)
;   (1 . trie?)
;   (1 . truncate->exact)
;   (1 . u16vector)
;   (1 . u16vector->list)
;   (1 . u16vector->vector)
;   (1 . u16vector-add)
;   (1 . u16vector-add!)
;   (1 . u16vector-and)
;   (1 . u16vector-and!)
;   (1 . u16vector-clamp)
;   (1 . u16vector-clamp!)
;   (1 . u16vector-copy)
;   (1 . u16vector-copy!)
;   (1 . u16vector-dot)
;   (1 . u16vector-fill!)
;   (1 . u16vector-ior)
;   (1 . u16vector-ior!)
;   (1 . u16vector-length)
;   (1 . u16vector-mul)
;   (1 . u16vector-mul!)
;   (1 . u16vector-range-check)
;   (1 . u16vector-ref)
;   (1 . u16vector-set!)
;   (1 . u16vector-sub)
;   (1 . u16vector-sub!)
;   (1 . u16vector-swap-bytes)
;   (1 . u16vector-swap-bytes!)
;   (1 . u16vector-xor)
;   (1 . u16vector-xor!)
;   (1 . u16vector?)
;   (1 . u32vector)
;   (1 . u32vector->list)
;   (1 . u32vector->string)
;   (1 . u32vector->vector)
;   (1 . u32vector-add)
;   (1 . u32vector-add!)
;   (1 . u32vector-and)
;   (1 . u32vector-and!)
;   (1 . u32vector-clamp)
;   (1 . u32vector-clamp!)
;   (1 . u32vector-copy)
;   (1 . u32vector-copy!)
;   (1 . u32vector-dot)
;   (1 . u32vector-fill!)
;   (1 . u32vector-ior)
;   (1 . u32vector-ior!)
;   (1 . u32vector-length)
;   (1 . u32vector-mul)
;   (1 . u32vector-mul!)
;   (1 . u32vector-range-check)
;   (1 . u32vector-ref)
;   (1 . u32vector-set!)
;   (1 . u32vector-sub)
;   (1 . u32vector-sub!)
;   (1 . u32vector-swap-bytes)
;   (1 . u32vector-swap-bytes!)
;   (1 . u32vector-xor)
;   (1 . u32vector-xor!)
;   (1 . u32vector?)
;   (1 . u64vector)
;   (1 . u64vector->list)
;   (1 . u64vector->vector)
;   (1 . u64vector-add)
;   (1 . u64vector-add!)
;   (1 . u64vector-and)
;   (1 . u64vector-and!)
;   (1 . u64vector-clamp)
;   (1 . u64vector-clamp!)
;   (1 . u64vector-copy)
;   (1 . u64vector-copy!)
;   (1 . u64vector-dot)
;   (1 . u64vector-fill!)
;   (1 . u64vector-ior)
;   (1 . u64vector-ior!)
;   (1 . u64vector-length)
;   (1 . u64vector-mul)
;   (1 . u64vector-mul!)
;   (1 . u64vector-range-check)
;   (1 . u64vector-ref)
;   (1 . u64vector-set!)
;   (1 . u64vector-sub)
;   (1 . u64vector-sub!)
;   (1 . u64vector-swap-bytes)
;   (1 . u64vector-swap-bytes!)
;   (1 . u64vector-xor)
;   (1 . u64vector-xor!)
;   (1 . u64vector?)
;   (1 . u8vector)
;   (1 . u8vector->list)
;   (1 . u8vector->string)
;   (1 . u8vector->vector)
;   (1 . u8vector-add)
;   (1 . u8vector-add!)
;   (1 . u8vector-and)
;   (1 . u8vector-and!)
;   (1 . u8vector-clamp)
;   (1 . u8vector-clamp!)
;   (1 . u8vector-copy)
;   (1 . u8vector-copy!)
;   (1 . u8vector-dot)
;   (1 . u8vector-fill!)
;   (1 . u8vector-ior)
;   (1 . u8vector-ior!)
;   (1 . u8vector-length)
;   (1 . u8vector-mul)
;   (1 . u8vector-mul!)
;   (1 . u8vector-range-check)
;   (1 . u8vector-ref)
;   (1 . u8vector-set!)
;   (1 . u8vector-sub)
;   (1 . u8vector-sub!)
;   (1 . u8vector-xor)
;   (1 . u8vector-xor!)
;   (1 . u8vector?)
;   (1 . ucs->char)
;   (1 . ucs-range->char-set)
;   (1 . ucs-range->char-set!)
;   (1 . ucs4->utf16)
;   (1 . ucs4->utf8)
;   (1 . ucscode->char)
;   (1 . uncaught-exception-reason)
;   (1 . uncaught-exception?)
;   (1 . undefined)
;   (1 . undefined?)
;   (1 . unfold)
;   (1 . unfold-right)
;   (1 . unpack)
;   (1 . unpack-skip)
;   (1 . unwrap-syntax)
;   (1 . unzip1)
;   (1 . unzip2)
;   (1 . unzip3)
;   (1 . unzip4)
;   (1 . unzip5)
;   (1 . upper)
;   (1 . uri-compose)
;   (1 . uri-decode)
;   (1 . uri-decode-string)
;   (1 . uri-decompose-authority)
;   (1 . uri-decompose-hierarchical)
;   (1 . uri-encode)
;   (1 . uri-encode-string)
;   (1 . uri-merge)
;   (1 . uri-parse)
;   (1 . uri-scheme&specific)
;   (1 . url-is-git?)
;   (1 . user-vicinity)
;   (1 . utf16->ucs4)
;   (1 . utf16-length)
;   (1 . utf8->ucs4)
;   (1 . utf8-length)
;   (1 . uvector-alias)
;   (1 . uvector-copy!)
;   (1 . uvector-immutable?)
;   (1 . uvector-length)
;   (1 . uvector-size)
;   (1 . uvector-swap-bytes)
;   (1 . uvector-swap-bytes!)
;   (1 . vector->f16vector)
;   (1 . vector->f32vector)
;   (1 . vector->f64vector)
;   (1 . vector->generator)
;   (1 . vector->posix-tm)
;   (1 . vector->s16vector)
;   (1 . vector->s32vector)
;   (1 . vector->s64vector)
;   (1 . vector->s8vector)
;   (1 . vector->u16vector)
;   (1 . vector->u32vector)
;   (1 . vector->u64vector)
;   (1 . vector->u8vector)
;   (1 . vector-any)
;   (1 . vector-append)
;   (1 . vector-binary-search)
;   (1 . vector-concatenate)
;   (1 . vector-copy)
;   (1 . vector-copy!)
;   (1 . vector-count)
;   (1 . vector-empty?)
;   (1 . vector-every)
;   (1 . vector-fold)
;   (1 . vector-fold-right)
;   (1 . vector-for-each)
;   (1 . vector-index)
;   (1 . vector-index-right)
;   (1 . vector-map)
;   (1 . vector-map!)
;   (1 . vector-reverse!)
;   (1 . vector-reverse-copy)
;   (1 . vector-reverse-copy!)
;   (1 . vector-skip)
;   (1 . vector-skip-right)
;   (1 . vector-swap!)
;   (1 . vector-unfold)
;   (1 . vector-unfold-right)
;   (1 . vector=)
;   (1 . version)
;   (1 . version-compare)
;   (1 . version<=?)
;   (1 . version<?)
;   (1 . version=?)
;   (1 . version>=?)
;   (1 . version>?)
;   (1 . vicinity:suffix?)
;   (1 . vm-build-insn)
;   (1 . vm-dump)
;   (1 . vm-find-insn-info)
;   (1 . vm-get-stack-trace)
;   (1 . vm-get-stack-trace-lite)
;   (1 . vm-set-default-exception-handler)
;   (1 . wait-all)
;   (1 . warn)
;   (1 . weak-vector-length)
;   (1 . weak-vector-ref)
;   (1 . weak-vector-set!)
;   (1 . whitespace->dash)
;   (1 . whitespace->underbar)
;   (1 . with-error-handler)
;   (1 . with-error-to-port)
;   (1 . with-exception-handler)
;   (1 . with-input-conversion)
;   (1 . with-input-from-port)
;   (1 . with-input-from-process)
;   (1 . with-input-from-string)
;   (1 . with-load-pathname)
;   (1 . with-lock-file)
;   (1 . with-locking-mutex)
;   (1 . with-output-conversion)
;   (1 . with-output-to-port)
;   (1 . with-output-to-process)
;   (1 . with-output-to-string)
;   (1 . with-port-locking)
;   (1 . with-ports)
;   (1 . with-string-io)
;   (1 . without-echoing)
;   (1 . wrap-with-input-conversion)
;   (1 . wrap-with-output-conversion)
;   (1 . write*)
;   (1 . write-ber-integer)
;   (1 . write-binary-double)
;   (1 . write-binary-float)
;   (1 . write-binary-long)
;   (1 . write-binary-short)
;   (1 . write-binary-sint)
;   (1 . write-binary-sint16)
;   (1 . write-binary-sint32)
;   (1 . write-binary-sint64)
;   (1 . write-binary-sint8)
;   (1 . write-binary-uint)
;   (1 . write-binary-uint16)
;   (1 . write-binary-uint32)
;   (1 . write-binary-uint64)
;   (1 . write-binary-uint8)
;   (1 . write-binary-ulong)
;   (1 . write-binary-ushort)
;   (1 . write-block)
;   (1 . write-byte)
;   (1 . write-f16)
;   (1 . write-f32)
;   (1 . write-f64)
;   (1 . write-fobject)
;   (1 . write-fobject/uv)
;   (1 . write-limited)
;   (1 . write-s16)
;   (1 . write-s32)
;   (1 . write-s64)
;   (1 . write-s8)
;   (1 . write-sint)
;   (1 . write-stream)
;   (1 . write-to-string)
;   (1 . write-u16)
;   (1 . write-u32)
;   (1 . write-u64)
;   (1 . write-u8)
;   (1 . write-uint)
;   (1 . write-with-shared-structure)
;   (1 . write/ss)
;   (1 . xcons)
;   (1 . xml-token-head)
;   (1 . xml-token-kind)
;   (1 . xml-token?)
;   (1 . xsubstring)
   (1 . zip)
;   (1 . ~)
))


;;  method
(my-scheme-add-keywords
 'my-font-lock-scheme-module-method-face

 '(
   (1 . add-hook!)
   (1 . add-method!)
   (1 . allocate-instance)
   (1 . apply-generic)
   (1 . apply-method)
   (1 . apply-methods)
   (1 . array-add-elements!)
   (1 . array-div-elements!)
   (1 . array-map)
   (1 . array-map!)
   (1 . array-mul-elements!)
   (1 . array-ref)
   (1 . array-retabulate!)
   (1 . array-set!)
   (1 . array-sub-elements!)
   (1 . call-with-builder)
   (1 . call-with-iterator)
   (1 . cgen-c-name)
   (1 . cgen-cexpr)
   (1 . cgen-emit)
   (1 . cgen-emit-body)
   (1 . cgen-emit-c)
   (1 . cgen-emit-decl)
   (1 . cgen-emit-h)
   (1 . cgen-emit-init)
   (1 . cgen-emit-static-data)
   (1 . cgen-emit-xtrn)
   (1 . cgen-literal-static?)
   (1 . cgen-make-literal)
   (1 . cgen-unit-c-file)
   (1 . cgen-unit-h-file)
   (1 . cgen-unit-init-name)
   (1 . cgen-unit-toplevel-nodes)
   (1 . change-class)
   (1 . class-redefinition)
   (1 . coerce-to)
   (1 . compute-applicable-methods)
   (1 . compute-cpl)
   (1 . compute-get-n-set)
   (1 . compute-slot-accessor)
   (1 . compute-slots)
   (1 . copy-queue)
   (1 . date-day)
   (1 . date-hour)
   (1 . date-minute)
   (1 . date-month)
   (1 . date-nanosecond)
   (1 . date-second)
   (1 . date-year)
   (1 . date-zone-offset)
   (1 . dbi-close)
   (1 . dbi-do)
   (1 . dbi-escape-sql)
   (1 . dbi-execute)
   (1 . dbi-execute-query)
   (1 . dbi-execute-using-connection)
   (1 . dbi-get-value)
   (1 . dbi-make-connection)
   (1 . dbi-make-query)
   (1 . dbi-open?)
   (1 . dbi-prepare)
   (1 . dbm-close)
   (1 . dbm-closed?)
   (1 . dbm-db-copy)
   (1 . dbm-db-exists?)
   (1 . dbm-db-move)
   (1 . dbm-db-remove)
   (1 . dbm-db-rename)
   (1 . dbm-delete!)
   (1 . dbm-exists?)
   (1 . dbm-fold)
   (1 . dbm-for-each)
   (1 . dbm-get)
   (1 . dbm-map)
   (1 . dbm-open)
   (1 . dbm-put!)
   (1 . delete-hook!)
   (1 . delete-method!)
   (1 . dict-delete!)
   (1 . dict-exists?)
   (1 . dict-fold)
   (1 . dict-fold-right)
   (1 . dict-for-each)
   (1 . dict-get)
   (1 . dict-keys)
   (1 . dict-map)
   (1 . dict-put!)
   (1 . dict-values)
   (1 . digest)
   (1 . digest-final!)
   (1 . digest-string)
   (1 . digest-update!)
   (1 . direction-of)
   (1 . file-atime<=?)
   (1 . file-atime<?)
   (1 . file-atime=?)
   (1 . file-atime>=?)
   (1 . file-atime>?)
   (1 . file-ctime<=?)
   (1 . file-ctime<?)
   (1 . file-ctime=?)
   (1 . file-ctime>=?)
   (1 . file-ctime>?)
   (1 . file-mtime<=?)
   (1 . file-mtime<?)
   (1 . file-mtime=?)
   (1 . file-mtime>=?)
   (1 . file-mtime>?)
   (1 . filter-to)
   (1 . find-index)
   (1 . find-max)
   (1 . find-min)
   (1 . find-min&max)
   (1 . find-with-index)
   (1 . fold$)
   (1 . fold-with-index)
   (1 . fold2)
   (1 . fold2$)
   (1 . fold3)
   (1 . fold3$)
   (1 . for-each-with-index)
   (1 . ftp-passive?)
   (1 . ftp-transfer-type)
   (1 . get-serializable-slots)
   (1 . group-collection)
   (1 . group-sequence)
   (1 . hmac-final!)
   (1 . hmac-update!)
   (1 . hook->list)
   (1 . hook-empty?)
   (1 . info-get-node)
   (1 . info-parse-menu)
   (1 . initialize)
   (1 . instance-of)
   (1 . instance-pool->list)
   (1 . instance-pool-find)
   (1 . instance-pool-fold)
   (1 . instance-pool-for-each)
   (1 . instance-pool-map)
   (1 . instance-pool-of)
   (1 . instance-pool-remove!)
   (1 . instance-pool:->list)
   (1 . instance-pool:add)
   (1 . instance-pool:compute-pools)
   (1 . instance-pool:create-pool)
   (1 . instance-pool:find)
   (1 . instance-pool:fold)
   (1 . instance-pool:for-each)
   (1 . instance-pool:map)
   (1 . instance-pool:remove!)
   (1 . instance-pools-of)
   (1 . lazy-size-of)
   (1 . listener-read-handler)
   (1 . listener-show-prompt)
   (1 . log-format)
   (1 . make)
   (1 . map-accum)
   (1 . map-to)
   (1 . map-to-with-index)
   (1 . map-with-index)
   (1 . method-more-specific?)
   (1 . modifier)
   (1 . object-*)
   (1 . object-+)
   (1 . object--)
   (1 . object-/)
   (1 . object-apply)
   (1 . object-compare)
   (1 . object-equal?)
   (1 . object-hash)
   (1 . object-isomorphic?)
   (1 . option-names)
   (1 . option-optional-arg?)
   (1 . option-processor)
   (1 . option-required-arg?)
   (1 . parameter-observer-add!)
   (1 . parameter-observer-delete!)
   (1 . parameter-post-observers)
   (1 . parameter-pre-observers)
   (1 . partition-to)
   (1 . permute)
   (1 . permute!)
   (1 . permute-to)
   (1 . port-of)
   (1 . process-command)
   (1 . process-exit-status)
   (1 . process-pid)
   (1 . pseudo-rtd)
   (1 . read-from-file-with-serializer)
   (1 . read-from-serializer)
   (1 . read-from-string-with-serializer)
   (1 . ref)
   (1 . referencer)
   (1 . relation-accessor)
   (1 . relation-coercer)
   (1 . relation-column-getter)
   (1 . relation-column-getters)
   (1 . relation-column-name?)
   (1 . relation-column-names)
   (1 . relation-column-setter)
   (1 . relation-column-setters)
   (1 . relation-deletable?)
   (1 . relation-delete!)
   (1 . relation-fold)
   (1 . relation-insert!)
   (1 . relation-insertable?)
   (1 . relation-modifier)
   (1 . relation-ref)
   (1 . relation-rows)
   (1 . relation-set!)
   (1 . remove-hook!)
   (1 . remove-to)
   (1 . reset-hook!)
   (1 . rtd-accessor)
   (1 . rtd-constructor)
   (1 . rtd-mutator)
   (1 . rtd-predicate)
   (1 . run-hook)
   (1 . selector-add!)
   (1 . selector-delete!)
   (1 . selector-select)
   (1 . set-time-nanosecond!)
   (1 . set-time-second!)
   (1 . set-time-type!)
   (1 . shape-valid-index?)
   (1 . shuffle)
   (1 . shuffle!)
   (1 . shuffle-to)
   (1 . size-of)
   (1 . slot-bound-using-class?)
   (1 . slot-exists-using-class?)
   (1 . slot-missing)
   (1 . slot-ref-using-class)
   (1 . slot-set-using-class!)
   (1 . slot-unbound)
   (1 . sockaddr-addr)
   (1 . sockaddr-family)
   (1 . sockaddr-name)
   (1 . sockaddr-port)
   (1 . sort-applicable-methods)
   (1 . subseq)
   (1 . time-counter-get-current-time)
   (1 . time-counter-get-delta)
   (1 . time-counter-reset!)
   (1 . time-counter-start!)
   (1 . time-counter-stop!)
   (1 . time-counter-value)
   (1 . time-nanosecond)
   (1 . time-second)
   (1 . time-type)
   (1 . update-direct-method!)
   (1 . update-direct-subclass!)
   (1 . write-object)
   (1 . write-to-file-with-serializer)
   (1 . write-to-serializer)
   (1 . write-to-string-with-serializer)
   (1 . write-tree)
   (1 . x->integer)
   (1 . x->number)
   (1 . x->string)
   ))


;;  class
(my-scheme-add-keywords
 'my-font-lock-scheme-constant-face



 '(
   (1 . &condition)
   (1 . &error)
   (1 . &i/o-closed-error)
   (1 . &i/o-error)
   (1 . &i/o-port-error)
   (1 . &i/o-read-error)
   (1 . &i/o-write-error)
   (1 . &message)
   (1 . &read-error)
   (1 . &serious)
   (1 . <%box-meta>)
   (1 . <%box>)
   (1 . <abandoned-mutex-exception-meta>)
   (1 . <abandoned-mutex-exception>)
   (1 . <accessor-method>)
   (1 . <arity-at-least>)
   (1 . <array-meta>)
   (1 . <array>)
   (1 . <autoload-meta>)
   (1 . <autoload>)
   (1 . <bimap>)
   (1 . <boolean-meta>)
   (1 . <boolean>)
   (1 . <buffered-input-port>)
   (1 . <buffered-output-port>)
   (1 . <cgen-literal>)
   (1 . <cgen-node>)
   (1 . <cgen-stub-error>)
   (1 . <cgen-stub-unit>)
   (1 . <cgen-type>)
   (1 . <cgen-unit>)
   (1 . <cgi-content-type-error>)
   (1 . <cgi-error>)
   (1 . <cgi-request-method-error>)
   (1 . <cgi-request-size-error>)
   (1 . <char-meta>)
   (1 . <char-set-meta>)
   (1 . <char-set>)
   (1 . <char>)
   (1 . <class>)
   (1 . <coding-aware-port>)
   (1 . <collection>)
   (1 . <compiled-code>)
   (1 . <complex-meta>)
   (1 . <complex>)
   (1 . <compound-condition>)
   (1 . <condition-meta>)
   (1 . <condition>)
   (1 . <csv>)
   (1 . <date>)
   (1 . <dbi-connection>)
   (1 . <dbi-driver>)
   (1 . <dbi-error>)
   (1 . <dbi-exception>)
   (1 . <dbi-nonexistent-driver-error>)
   (1 . <dbi-parameter-error>)
   (1 . <dbi-query>)
   (1 . <dbi-result-set>)
   (1 . <dbi-unsupported-error>)
   (1 . <dbm-meta>)
   (1 . <dbm>)
   (1 . <dictionary>)
   (1 . <eof-object>)
   (1 . <error>)
   (1 . <exception>)
   (1 . <f16array>)
   (1 . <f16vector-meta>)
   (1 . <f16vector>)
   (1 . <f32array>)
   (1 . <f32vector-meta>)
   (1 . <f32vector>)
   (1 . <f64array>)
   (1 . <f64vector-meta>)
   (1 . <f64vector>)
   (1 . <foreign-pointer>)
   (1 . <fsdbm>)
   (1 . <ftp-connection>)
   (1 . <ftp-error>)
   (1 . <generic>)
   (1 . <gloc-meta>)
   (1 . <gloc>)
   (1 . <hash-table-meta>)
   (1 . <hash-table>)
   (1 . <hmac>)
   (1 . <hook>)
   (1 . <http-error>)
   (1 . <identifier>)
   (1 . <info-file>)
   (1 . <info-node>)
   (1 . <instance-pool-meta>)
   (1 . <instance-pool-mixin>)
   (1 . <integer-meta>)
   (1 . <integer>)
   (1 . <io-closed-error>)
   (1 . <io-error>)
   (1 . <io-read-error>)
   (1 . <io-unit-error>)
   (1 . <io-write-error>)
   (1 . <join-timeout-exception-meta>)
   (1 . <join-timeout-exception>)
   (1 . <json-construct-error>)
   (1 . <json-parse-error>)
   (1 . <keyword-meta>)
   (1 . <keyword>)
   (1 . <list-meta>)
   (1 . <list>)
   (1 . <listener>)
   (1 . <lock-file-failure>)
   (1 . <log-drain>)
   (1 . <macro-meta>)
   (1 . <macro>)
   (1 . <md5>)
   (1 . <mersenne-twister>)
   (1 . <message-condition>)
   (1 . <message-digest-algorithm-meta>)
   (1 . <message-digest-algorithm>)
   (1 . <method>)
   (1 . <mime-part>)
   (1 . <module-meta>)
   (1 . <module>)
   (1 . <mtqueue>)
   (1 . <ndbm>)
   (1 . <next-method>)
   (1 . <null-meta>)
   (1 . <null>)
   (1 . <number-meta>)
   (1 . <number>)
   (1 . <object-set-relation>)
   (1 . <object>)
   (1 . <ordered-dictionary>)
   (1 . <pair-meta>)
   (1 . <pair>)
   (1 . <parameter>)
   (1 . <parse-error>)
   (1 . <parseopt-error>)
   (1 . <port-error>)
   (1 . <port>)
   (1 . <procedure>)
   (1 . <process-abnormal-exit>)
   (1 . <process-time-counter>)
   (1 . <process>)
   (1 . <promise-meta>)
   (1 . <promise>)
   (1 . <propagate-meta>)
   (1 . <propagate-mixin>)
   (1 . <pseudo-record-meta>)
   (1 . <queue>)
   (1 . <rational-meta>)
   (1 . <rational>)
   (1 . <rbtree>)
   (1 . <read-context>)
   (1 . <read-error>)
   (1 . <read-reference>)
   (1 . <real-meta>)
   (1 . <real-time-counter>)
   (1 . <real>)
   (1 . <record-meta>)
   (1 . <record>)
   (1 . <regexp-invalid-ast>)
   (1 . <regexp-meta>)
   (1 . <regexp>)
   (1 . <regmatch-meta>)
   (1 . <regmatch>)
   (1 . <relation>)
   (1 . <rfc822-parse-error>)
   (1 . <s16array>)
   (1 . <s16vector-meta>)
   (1 . <s16vector>)
   (1 . <s32array>)
   (1 . <s32vector-meta>)
   (1 . <s32vector>)
   (1 . <s64array>)
   (1 . <s64vector-meta>)
   (1 . <s64vector>)
   (1 . <s8array>)
   (1 . <s8vector-meta>)
   (1 . <s8vector>)
   (1 . <selector>)
   (1 . <sequence>)
   (1 . <serializer>)
   (1 . <serious-compound-condition>)
   (1 . <serious-condition>)
   (1 . <sha1>)
   (1 . <sha224>)
   (1 . <sha256>)
   (1 . <sha384>)
   (1 . <sha512>)
   (1 . <simple-relation>)
   (1 . <singleton-meta>)
   (1 . <singleton-mixin>)
   (1 . <slot-accessor>)
   (1 . <sockaddr-in6>)
   (1 . <sockaddr-in>)
   (1 . <sockaddr-un>)
   (1 . <sockaddr>)
   (1 . <socket>)
   (1 . <sparse-f16vector>)
   (1 . <sparse-f32vector>)
   (1 . <sparse-f64vector>)
   (1 . <sparse-s16vector>)
   (1 . <sparse-s32vector>)
   (1 . <sparse-s64vector>)
   (1 . <sparse-s8vector>)
   (1 . <sparse-table>)
   (1 . <sparse-u16vector>)
   (1 . <sparse-u32vector>)
   (1 . <sparse-u64vector>)
   (1 . <sparse-u8vector>)
   (1 . <sparse-vector-base>)
   (1 . <sparse-vector>)
   (1 . <sql-parse-error>)
   (1 . <string-meta>)
   (1 . <string-pointer-meta>)
   (1 . <string-pointer>)
   (1 . <string>)
   (1 . <symbol-meta>)
   (1 . <symbol>)
   (1 . <syntactic-closure>)
   (1 . <syntax-meta>)
   (1 . <syntax-pattern-meta>)
   (1 . <syntax-pattern>)
   (1 . <syntax-rules-meta>)
   (1 . <syntax-rules>)
   (1 . <syntax>)
   (1 . <sys-addrinfo>)
   (1 . <sys-fdset>)
   (1 . <sys-flock>)
   (1 . <sys-group>)
   (1 . <sys-hostent>)
   (1 . <sys-passwd>)
   (1 . <sys-protoent>)
   (1 . <sys-servent>)
   (1 . <sys-sigset>)
   (1 . <sys-stat>)
   (1 . <sys-termios>)
   (1 . <sys-tm>)
   (1 . <system-error>)
   (1 . <system-time-counter>)
   (1 . <terminated-thread-exception-meta>)
   (1 . <terminated-thread-exception>)
   (1 . <thread-exception-meta>)
   (1 . <thread-exception>)
   (1 . <thread-meta>)
   (1 . <thread-pool-shut-down>)
   (1 . <thread-pool>)
   (1 . <thread>)
   (1 . <time-counter>)
   (1 . <time-result>)
   (1 . <time>)
   (1 . <tmodule>)
   (1 . <top>)
   (1 . <tree-map-meta>)
   (1 . <tree-map>)
   (1 . <trie>)
   (1 . <u16array>)
   (1 . <u16vector-meta>)
   (1 . <u16vector>)
   (1 . <u32array>)
   (1 . <u32vector-meta>)
   (1 . <u32vector>)
   (1 . <u64array>)
   (1 . <u64vector-meta>)
   (1 . <u64vector>)
   (1 . <u8array>)
   (1 . <u8vector-meta>)
   (1 . <u8vector>)
   (1 . <uncaught-exception-meta>)
   (1 . <uncaught-exception>)
   (1 . <undefined-object>)
   (1 . <unhandled-signal-error>)
   (1 . <unknown>)
   (1 . <user-time-counter>)
   (1 . <uvector-meta>)
   (1 . <uvector>)
   (1 . <validator-meta>)
   (1 . <validator-mixin>)
   (1 . <vector-meta>)
   (1 . <vector>)
   (1 . <virtual-input-port>)
   (1 . <virtual-output-port>)
   (1 . <vm-insn-info>)
   (1 . <weak-hash-table-meta>)
   (1 . <weak-hash-table>)
   (1 . <weak-vector-meta>)
   (1 . <weak-vector>)
   (1 . fobject)
   (1 . ftype)
   (1 . ftype:slot)
   (1 . ftype:struct)
   (1 . job)
   ))


;;  char-set
(my-scheme-add-keywords
 'my-font-lock-scheme-module-charset-face

 '(
   (1 . *rfc2396-unreserved-char-set*)
   (1 . *rfc3986-unreserved-char-set*)
   (1 . *rfc822-atext-chars*)
   (1 . char-set:ascii)
   (1 . char-set:blank)
   (1 . char-set:digit)
   (1 . char-set:empty)
   (1 . char-set:full)
   (1 . char-set:graphic)
   (1 . char-set:hex-digit)
   (1 . char-set:iso-control)
   (1 . char-set:letter)
   (1 . char-set:letter+digit)
   (1 . char-set:lower-case)
   (1 . char-set:printing)
   (1 . char-set:punctuation)
   (1 . char-set:symbol)
   (1 . char-set:title-case)
   (1 . char-set:upper-case)
   (1 . char-set:whitespace)
   ))


;;  parameter
(my-scheme-add-keywords
 'my-font-lock-scheme-module-parameter-face


 '(
   (1 . cgen-current-unit)
   (1 . cgi-metavariables)
   (1 . cgi-output-character-encoding)
   (1 . cgi-temporary-files)
   (1 . cise-context)
   (1 . cise-emit-source-line)
   (1 . current-country)
   (1 . current-language)
   (1 . current-locale-details)
   (1 . current-tmodule-class)
   (1 . debug-print-width)
   (1 . http-user-agent)
   (1 . log-default-drain)
   (1 . module-reload-rules)
   (1 . reload-verbose)
   (1 . ssax:warn-handler)
   (1 . temporary-directory)
   ))


(font-lock-add-keywords 'scheme-mode
                        `(
                          ;; (use module)
                          (,(rx (and
                                 (syntax open-parenthesis)  "use" (zero-or-more (in " \t\n"))
                                 (submatch (one-or-more
                                            (submatch (or (syntax word)
                                                          (syntax symbol)))))
                                 (syntax close-parenthesis)))
                           1 'font-lock-variable-name-face)
                          ;; (require-extension (srfi 1))
                          (,(rx (and
                                 (syntax open-parenthesis) "require-extension" (zero-or-more (in "  \t\n"))
                                 (syntax open-parenthesis)
                                 (submatch
                                  "srfi")
                                 (submatch (one-or-more (or numeric
                                                  (in " \t\n" ))))
                                 (syntax close-parenthesis)
                                 (syntax close-parenthesis)
                                        ;(one-or-more
                                        ;(one-or-more (in " \n\t"))
                                        ;(submatch (one-or-more numeric)))
                                 ))
                           (1 'font-lock-variable-name-face)
                           (2 'font-lock-type-face))
                          ;; (export some-function)
                          (,(rx (and
                                 (syntax open-parenthesis) "export" (zero-or-more (in " \t\n"))
                                 (submatch
                                  (one-or-more  (or (syntax word)
                                                    (syntax symbol)
                                                    (in " \t\n"))))))
                           1  'font-lock-variable-name-face)
                          ;; (export some-function)
                                        ;                        (,(rx (and
                                        ;                               (syntax open-parenthesis) "export" (zero-or-more (in " \t\n"))
                                        ;                               (one-or-more (or (syntax word)
                                        ;                                                (syntax symbol)
                                        ;                                                (in " \t\n")))
                                        ;                               (syntax close-parenthesis)))
                                        ;                         (,(rx (or (syntax word)
                                        ;                                   (syntax symbol)))
                                        ;                          (match-end 2)
                                        ;                          (goto-char (match-end 0))
                                        ;                          (0 font-lock-type-face t)))
                          ;; (select-module module)
                          (,(rx (and
                                 (syntax open-parenthesis) "select-module" (zero-or-more (in " \t\n"))
                                 (submatch
                                  (one-or-more (or (syntax symbol)
                                                   (syntax word))))))
                           1  'font-lock-type-face)
                          ;; ,@
                          (,(rx ",@")
                           0 'my-font-lock-scheme-string-face)
                          ;; #`
                          (,(rx (submatch "#`\"")
                                (submatch (one-or-more any))
                                (submatch  "\""))
                           (1 'my-font-lock-scheme-regexp-face)
                           (2 'my-font-lock-scheme-regexp-face)
                           (3 'my-font-lock-scheme-regexp-face)
                           )
                          ;; #t #f
                          (,(rx (or  "#t" "#f"))
                           0 'my-font-lock-scheme-boolean-face)
                          (,(rx "#/"
                                (submatch
                                 (one-or-more
                                  any))
                                "/")
                           0 'my-font-lock-scheme-regexp-face)
                          (,(rx "*"
                                (submatch
                                 (one-or-more
                                  any))
                                "*")
                           0 'my-font-lock-scheme-constant-face)
                          ))


;; scheme mode recognition
(add-to-list 'auto-mode-alist '("\\.leh\\'" .  scheme-mode))

;;http://d.hatena.ne.jp/kobapan/20091205/1259972925
;; scheme-mode-hook
(defvar ac-source-scheme
  '((candidates
     (lambda ()
       (my-req 'scheme-complete)
       (all-completions ac-target (car (scheme-current-env))))))
  "Source for scheme keywords.")
(add-hook 'scheme-mode-hook
          (lambda ()
            (add-to-list 'ac-sources 'ac-source-scheme)))

(provide 'my-init-gauche)
