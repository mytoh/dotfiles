;; -*-lisp;stumpwm-*-
;; vim:filetype=lisp

;; settings taken from "http://aperturefever.wordpress.com/2010/05/10/updating-stumpwm-conf/"

(in-package :stumpwm)

(defparameter terminal "urxvtcd")

;; message window
(set-bg-color "grey20")
(set-fg-color "orange")
(set-border-color "grey10")
(set-msg-border-width 1)
;(set-font "-mplus-goth_p-medium-r-normal-*-10-*-*-*-*-*-iso10646-*"
(set-font "-xos4-terminus-medium-r-normal-*-12-*-*-*-*-*-iso10646-*")
;; windows
(set-focus-color "khaki")
(set-unfocus-color "grey10")
(set-win-bg-color "grey20")
(set-normal-gravity :center)
(set-transient-gravity :top-right)
(set-frame-outline-width 1)

;; options
(setf
  *normal-border-width*             1
  *maxsize-border-width*            1
  *transient-border-width*          1
  *window-border-style*             :thin ;; thick,thin,none,tight
  *startup-message*                 nil
  *frame-number-map*                "aoeuidhtnspyfgcrlqjkxbmwvz"
  *window-number-map*               "aoeuidhtns"
  *group-number-map*                "aoeuidhtns"
  *mouse-focus-policy*              :sloppy
  *message-window-gravity*          :bottom-left
  *input-window-gravity*            :bottom-left
  *run-or-raise-all-groups*         t
  *input-history-ignore-duplicates* t
  *new-window-preferred-frame*      '(:empty :focused)
  *mode-line-background-color*      "grey20"
  *mode-line-foreground-color*      "DarkKhaki"
  *mode-line-border-color*          "pink"
  *mode-line-position*              :top
  *mode-line-border-width*          0
  *mode-line-pad-x*                 1
  *mode-line-pad-y*                 1
  *mode-line-timeout*               5
  *window-format*                   "^9*(%n%m%15t)^n" ;;^5 magenta
  *group-format*                    "^7*%t%s^n" ;;^7 white
  )

;; set color slots
 (setf *colors* (list "grey"          ; 0 black
                     "palevioletred" ; 1 red
                     "lightblue"     ; 2 green
                     "bisque"        ; 3 yellow
                     "steelblue"     ; 4 blue
                     "slateblue"     ; 5 magenta
                     "aquamarine"    ; 6 cyan
                     "honeydew"      ; 7 white
                     "thistle"       ; 8 user
                     "lightskyblue")); 9 user
(update-color-map (current-screen))

;; modeline
(if (not (head-mode-line (current-head)))
    (toggle-mode-line (current-screen) (current-head)))

(setf *screen-mode-line-format*  ;; ^n use the normal bg and fg color
      (list "%g ^8*|^n %W "
            "^8*|^n "
            '(:eval (run-shell-command "~/.stumpwm/modeline.scm" t))
            "^8*|^n %d "
            ))

;; startup programmes
;(run-shell-command "exec trayer --expand true --alpha 100  --tint 0x303030 --transparent true --padding 1 --margin 0 --edge bottom --align right --SetDockType true --SetPartialStrut true --heighttype pixel --height 8 --widthtype request --width 100 " )
;(run-shell-command "stalonetray" )
;(run-shell-command "exec feh --bg-scale ~/.wallpaper" )
(run-shell-command "exec gm display -window root ~/.wallpaper" )
(run-shell-command "exec killall xcompmgr ; xcompmgr -n " )
(run-shell-command "exec ~/.stumpwm/dzen.sh" )

;; commands
(defcommand terminal () () (run-shell-command "exec urxvtcd"))
(defcommand firefox () () (run-or-raise "exec firefox" '(:class "firefox")))
(defcommand thunar () () (run-or-raise "exec thunar" '(:class "Thunar")))
(defcommand dmenu () () (run-shell-command "exec dmenu_run -i -b -nb '#4d3e41' -nf '#947988' -sb '#947988' -sf '#4d3e41' "))

;;; keymap
;;;
;;;  modifier keys are defined in 
;;;  keytrans.lisp 
;;;
;; apps
(define-key *root-map* (kbd "c")     "terminal")
(define-key *root-map* (kbd "f")     "browser")
(define-key *root-map* (kbd "t")     "filer")
(define-key *top-map*  (kbd "M-SPC") "dmenu")

;; window operation
(define-key *root-map* (kbd "C-f")   "fullscreen")
(define-key *top-map*  (kbd "s-RET") "fullscreen")
(define-key *root-map* (kbd "C-o")   "fnext") ; default key "C-t o"
(define-key *top-map*  (kbd "M-TAB") "next")
(define-key *top-map*  (kbd "s-r")   "restart-hard")
 
;;input window keymap
(define-key *input-map* (kbd "C-i") 'input-complete-forward)
(define-key *input-map* (kbd "C-m") 'input-submit)
(define-key *input-map* (kbd "C-h") 'input-delete-backward-char)

;; group key map
(define-key *groups-map* (kbd "f") "gmove media")

;; display the key sequence in progress
;(defun key-press-hook (key key-seq cmd)
 ;(declare (ignore key))
 ;(unless (eq *top-map* *resize-map*)
  ;(let ((*message-window-gravity* :center))
   ;(message "Key sequence: ~a" (print-key-seq (reverse key-seq))))
  ;(when (stringp cmd)
   ;(sleep 0.5))))

;(defmacro replace-hook (hook fn)
 ;`(remove-hook ,hook ,fn)
 ;`(add-hook ,hook ,fn))

;(replace-hook *key-press-hook* 'key-press-hook)

;; groups
; rename the first group to main
;(setf (group-name (first (screen (current-screen)))) "main")
; create the other group
; gnewbg, gnewbg-float
(run-commands  "gselect Default" "grename main" "gselect main" "gnewbg web" "gnewbg media" )

;;;; window placement rules
(clear-window-placement-rules) ; clear rules

(define-frame-preference "web"
     ;; fnumber raise lock (lock AND raise == jumpto)
      (0 t t :class "Opera"))

(define-frame-preference "web"
      (0 t t :class "Firefox"))

(define-frame-preference "media"
      (0 t t :class "Audacious"))

(define-frame-preference "media"
      (0 t t :class "MPlayer"))

(setf *debug-level* 10)

