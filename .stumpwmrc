;; -*- lisp -*-

(in-package :stumpwm)

(setf *debug-level* 10)

(setf *startup-message* nil)

;; hide mouse
(run-with-timer 5 5 'banish-pointer)

(set-font "-kochi-gothic-medium-r-normal-*-*-110-*-*-p-*-iso10646-1")

;;;; message window
(set-bg-color "grey20")
(set-fg-color "orange")
(set-border-color "grey10")
(set-msg-border-width 1)


;; (run-shell-command " ~/.dzen/bin/status | exec dzen2 -p 1 -ta r -x 400 -y 0 -w 800 -h 16 ")
;; (run-shell-command "exec trayer --expand false --alpha 200  --tint 0x303030 --transparent true --padding 1 --margin 0 --edge bottom --align right --SetDockType true --SetPartialStrut true --heighttype pixel --height 8 --widthtype pixel --width 80 " )

(defcommand urxvtc () () (run-shell-command "urxvtc"))
(defcommand firefox3 () () (run-or-raise "firefox3" '(:class "Firefox")))
(defcommand thunar () () (run-or-raise "thunar" '(:class "Thunar")))
(defcommand dmenu () () (run-shell-command "dmenu_run -nb grey20 -nf orange"))

(define-key *root-map* (kbd "c") "urxvtc")
(define-key *root-map* (kbd "f") "firefox3")
(define-key *root-map* (kbd "t") "thunar")

(define-key *top-map* (kbd "M-j") "next-in-frame")
(define-key *top-map* (kbd "M-k") "prev-in-frame")
(define-key *top-map* (kbd "M-n") "fnext")
(define-key *top-map* (kbd "M-s") "vsplit")
(define-key *top-map* (kbd "M-S") "hsplit")
(define-key *top-map* (kbd "M-R") "remove")
(define-key *top-map* (kbd "M-f") "fullscreen")
(define-key *top-map* (kbd "M-d") "dmenu")
(define-key *top-map* (kbd "M-TAB") "next")

(setf *mouse-focus-policy* :sloppy)

(setq *input-window-gravity* :bottom-left)

(setf *normal-border-width* 1 
      *transient-border-width* 1
      *window-border-style* :thin)

;; frame
(set-frame-outline-width 1)
(setf *new-window-preferred-frame* '(:empty :focused))

;; modeline
(if (not (head-mode-line (current-head)))
    (toggle-mode-line (current-screen) (current-head)))

(setf *mode-line-screen-position* :top
      *mode-line-border-width* 1
      *mode-line-pad-x* 2
      *mode-line-pad-y* 2
      *mode-line-timeout* 1
      *window-format* "<%n%s%m%15t>"
      *screen-mode-line-format*
      (list "%g | %w | " '(:eval (run-shell-command "date +'%a %d %m %T' | tr -d '[:cntrl:]'" t))))
