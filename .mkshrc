
# options {{{
set -o utf8-mode
set -o ignoreeof
set -o physical
set -o trackall
#}}}

xsource() { # {{{
  # from grml zshrc
  # Check if we can read given files and source those we can.
  if (( $# < 1 )) ; then
    printf 'usage: xsource FILE(s)...\n' >&2
    return 1
  fi

  while (( $# > 0 )) ; do
    [[ -r "$1" ]] && source "$1" > /dev/null 2>&1 ;
    shift
  done
  return 0
} #}}}
xsource ~/.mksh.d/path.mksh
xsource ~/.mksh.d/function.mksh
xsource ~/.mksh.d/alias.mksh
xsource ~/.mksh.d/prompt.mksh
xsource ~/.mksh.d/gauche.mksh
xsource ~/.mksh.d/environment.mksh

# variables
blue="[38;5;004m"
normal_color="[38;5;8m"
green="[38;5;6m"
reset_color="[0m"



# key bindings
bind '^P'=search-history-up
bind '^U'=kill-line

# misc {{{
 # fasd {{{
if whence -p fasd >&- ; then
  eval "$(fasd --init posix-alias posix-hook)"
  elif whence -p panna >&-; then
      panna install fasd
fi
 # }}}

# if [[ -n $DISPLAY ]];then
#   if [[ -e ~/.fonts ]]; then
#     for d in ~/.fonts/*(/); do
#       if [[ -e $d/fonts.dir ]]; then
#       xset +fp $d
#     fi
#       xset fp rehash
#     done
#   fi
# fi
#}}}


# os {{{
case $(uname) in
  FreeBSD)
    xsource ~/.mksh.d/freebsd.mksh
    ;;
  Darwin)
    alias mp2="/Applications/mplayer2.app/Contents/MacOS/mplayer-bin"
    alias bsearch="brew search "
    alias binst="brew install -v"
    squid_restart() {
      killall squid
      killall squid
      kill $(cat ~/.squid/logs/squid.pid)
      kill $(cat ~/.squid/logs/squid.pid)
      /bin/rm -rfv ~/.squid/cache/*
      squid -f ~/.squid/etc/squid.conf -z
      squid -f ~/.squid/etc/squid.conf
    }
    export HOMEBREW_VERBOSE
    export JAVA_HOME=~/Library/JAVA/JavaVirtualMachines/1.7.0.jdk/Contents/Home
     xsource `brew --prefix`/etc/autojump
     xsource `brew --prefix`/etc/bash_completion.d/git-completion.bash
    ;;

esac
#}}}




unset p

# vim:foldmethod=marker
